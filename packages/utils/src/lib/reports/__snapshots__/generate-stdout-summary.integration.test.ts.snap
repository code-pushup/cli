// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`report-to-stdout > should contain all sections when using the fixture report 1`] = `
"Code PushUp Report - @code-pushup/core@0.0.1


ESLint audits

● Disallow missing props validation in   6 warnings
  a React component definition
● Disallow variable declarations from    3 warnings
  shadowing variables declared in the
  outer scope
● Require or disallow method and         3 warnings
  property shorthand syntax for object
  literals
● verifies the list of dependencies      2 warnings
  for Hooks like useEffect and similar
● Disallow missing \`key\` props in        1 warning
  iterators/collection literals
● Disallow unused variables              1 warning
● Enforce a maximum number of lines of   1 warning
  code in a function
● Require \`const\` declarations for       1 warning
  variables that are never reassigned
  after declared
● Require braces around arrow function   1 warning
  bodies
● Require the use of \`===\` and \`!==\`     1 warning
● Disallow \`target=\\"_blank\\"\` attribute   passed
  without \`rel=\\"noreferrer\\"\`
● Disallow assignment operators in       passed
  conditional expressions
● Disallow comments from being           passed
  inserted as text nodes
● Disallow direct mutation of            passed
  this.state
● Disallow duplicate properties in JSX   passed
● Disallow invalid regular expression    passed
  strings in \`RegExp\` constructors
● Disallow loops with a body that        passed
  allows only one iteration
● Disallow missing displayName in a      passed
  React component definition
● Disallow missing React when using      passed
  JSX
● Disallow negating the left operand     passed
  of relational operators
● Disallow passing of children as        passed
  props
● Disallow React to be incorrectly       passed
  marked as unused
● Disallow reassigning \`const\`           passed
  variables
● Disallow the use of \`debugger\`         passed
● Disallow the use of undeclared         passed
  variables unless mentioned in
  \`/*global */\` comments
● Disallow undeclared variables in JSX   passed
● Disallow unescaped HTML entities       passed
  from appearing in markup
● Disallow usage of deprecated methods   passed
● Disallow usage of findDOMNode          passed
● Disallow usage of isMounted            passed
● Disallow usage of the return value     passed
  of ReactDOM.render
● Disallow usage of unknown DOM          passed
  property
● Disallow use of optional chaining in   passed
  contexts where the \`undefined\` value
  is not allowed
● Disallow using Object.assign with an   passed
  object literal as the first argument
  and prefer the use of object spread
  instead
● Disallow using string references       passed
● Disallow variables used in JSX to be   passed
  incorrectly marked as unused
● Disallow when a DOM element is using   passed
  both children and
  dangerouslySetInnerHTML
● Enforce a maximum number of lines      passed
  per file
● Enforce camelcase naming convention    passed
● Enforce comparing \`typeof\`             passed
  expressions against valid strings
● Enforce consistent brace style for     passed
  all control statements
● Enforce ES5 or ES6 class for           passed
  returning value in render function
● enforces the Rules of Hooks            passed
● Require \`let\` or \`const\` instead of    passed
  \`var\`
● Require calls to \`isNaN()\` when        passed
  checking for \`NaN\`
● Require or disallow \\"Yoda\\"             passed
  conditions
● Require using arrow functions for      passed
  callbacks


Lighthouse audits

● First Contentful Paint                 1.2 s
● Largest Contentful Paint               1.5 s
● Speed Index                            1.2 s
● Cumulative Layout Shift                0
● Total Blocking Time                    0 ms


Categories

┌────────────────┬────────┬────────┐
│ Category       │  Score │ Audits │
├────────────────┼────────┼────────┤
│ Performance    │     92 │      6 │
├────────────────┼────────┼────────┤
│ Bug prevention │     68 │     16 │
├────────────────┼────────┼────────┤
│ Code style     │     54 │     13 │
└────────────────┴────────┴────────┘

Made with ❤ by code-pushup.dev
"
`;
