import { writeFile } from 'node:fs/promises';
import { join } from 'node:path';
import { Audit, CategoryConfig, Group } from '@code-pushup/models';
import { LIGHTHOUSE_PLUGIN_SLUG } from '../../src/lib/constants';
import { getExampleReport } from './utils';

async function run() {
  const {
    audits: lighthouseAudits,
    categories: lighthouseCategories,
    lighthouseVersion,
  } = await getExampleReport({ deleteFile: false });

  const audits = Object.entries(lighthouseAudits).map(
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ([_, { id, title, description }]) =>
      ({
        slug: id,
        title,
        description,
      } satisfies Audit),
  );

  const groups = Object.entries(lighthouseCategories).map(
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ([_, { id, title, description, auditRefs }]) =>
      ({
        slug: id,
        title,
        description,
        refs: auditRefs.map(({ id: slug, weight }) => ({
          slug,
          weight,
        })),
      } satisfies Group),
  );

  const categories = Object.entries(lighthouseCategories).map(
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ([_, { id, title, description, manualDescription }]) =>
      ({
        slug: id,
        title,
        description: [description, manualDescription]
          .filter(str => !str || str !== '')
          .join('\n'),
        refs: [
          {
            // group id and external category are the same
            slug: id,
            plugin: LIGHTHOUSE_PLUGIN_SLUG as string,
            type: 'group',
            weight: 1,
          },
        ],
      } satisfies CategoryConfig),
  );

  const content = [
    '// DO NOT EDIT!',
    `// This file is autogenerated form lighthouse version \`${lighthouseVersion}\``,
    `export const audits = ${JSON.stringify(audits, null, 2)};`,
    `export const groups = ${JSON.stringify(groups, null, 2)};`,
    `export const categories = ${JSON.stringify(categories, null, 2)};`,
  ].join('\n');
  await writeFile(join('..', 'src', 'lib', 'constants.generated.ts'), content);
}

// eslint-disable-next-line unicorn/prefer-top-level-await
void run();
