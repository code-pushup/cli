// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`eslintPlugin > should initialize ESLint plugin for Nx project 1`] = `
{
  "audits": [
    {
      "description": "ESLint rule **adjacent-overload-signatures**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/adjacent-overload-signatures",
      "slug": "typescript-eslint-adjacent-overload-signatures",
      "title": "Require that function overload signatures be consecutive",
    },
    {
      "description": "ESLint rule **ban-ts-comment**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/ban-ts-comment",
      "slug": "typescript-eslint-ban-ts-comment",
      "title": "Disallow \`@ts-<directive>\` comments or require descriptions after directives",
    },
    {
      "description": "ESLint rule **ban-types**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/ban-types",
      "slug": "typescript-eslint-ban-types",
      "title": "Disallow certain types",
    },
    {
      "description": "ESLint rule **no-array-constructor**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/no-array-constructor",
      "slug": "typescript-eslint-no-array-constructor",
      "title": "Disallow generic \`Array\` constructors",
    },
    {
      "description": "ESLint rule **no-empty-function**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/no-empty-function",
      "slug": "typescript-eslint-no-empty-function",
      "title": "Disallow empty functions",
    },
    {
      "description": "ESLint rule **no-empty-interface**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/no-empty-interface",
      "slug": "typescript-eslint-no-empty-interface",
      "title": "Disallow the declaration of empty interfaces",
    },
    {
      "description": "ESLint rule **no-explicit-any**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/no-explicit-any",
      "slug": "typescript-eslint-no-explicit-any",
      "title": "Disallow the \`any\` type",
    },
    {
      "description": "ESLint rule **no-extra-non-null-assertion**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/no-extra-non-null-assertion",
      "slug": "typescript-eslint-no-extra-non-null-assertion",
      "title": "Disallow extra non-null assertions",
    },
    {
      "description": "ESLint rule **no-extra-semi**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/no-extra-semi",
      "slug": "typescript-eslint-no-extra-semi",
      "title": "Disallow unnecessary semicolons",
    },
    {
      "description": "ESLint rule **no-inferrable-types**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/no-inferrable-types",
      "slug": "typescript-eslint-no-inferrable-types",
      "title": "Disallow explicit type declarations for variables or parameters initialized to a number, string, or boolean",
    },
    {
      "description": "ESLint rule **no-loss-of-precision**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/no-loss-of-precision",
      "slug": "typescript-eslint-no-loss-of-precision",
      "title": "Disallow literal numbers that lose precision",
    },
    {
      "description": "ESLint rule **no-misused-new**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/no-misused-new",
      "slug": "typescript-eslint-no-misused-new",
      "title": "Enforce valid definition of \`new\` and \`constructor\`",
    },
    {
      "description": "ESLint rule **no-namespace**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/no-namespace",
      "slug": "typescript-eslint-no-namespace",
      "title": "Disallow TypeScript namespaces",
    },
    {
      "description": "ESLint rule **no-non-null-asserted-optional-chain**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/no-non-null-asserted-optional-chain",
      "slug": "typescript-eslint-no-non-null-asserted-optional-chain",
      "title": "Disallow non-null assertions after an optional chain expression",
    },
    {
      "description": "ESLint rule **no-non-null-assertion**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/no-non-null-assertion",
      "slug": "typescript-eslint-no-non-null-assertion",
      "title": "Disallow non-null assertions using the \`!\` postfix operator",
    },
    {
      "description": "ESLint rule **no-this-alias**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/no-this-alias",
      "slug": "typescript-eslint-no-this-alias",
      "title": "Disallow aliasing \`this\`",
    },
    {
      "description": "ESLint rule **no-unnecessary-type-constraint**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/no-unnecessary-type-constraint",
      "slug": "typescript-eslint-no-unnecessary-type-constraint",
      "title": "Disallow unnecessary constraints on generic types",
    },
    {
      "description": "ESLint rule **no-unused-vars**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/no-unused-vars",
      "slug": "typescript-eslint-no-unused-vars",
      "title": "Disallow unused variables",
    },
    {
      "description": "ESLint rule **no-var-requires**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/no-var-requires",
      "slug": "typescript-eslint-no-var-requires",
      "title": "Disallow \`require\` statements except in import statements",
    },
    {
      "description": "ESLint rule **prefer-as-const**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/prefer-as-const",
      "slug": "typescript-eslint-prefer-as-const",
      "title": "Enforce the use of \`as const\` over literal type",
    },
    {
      "description": "ESLint rule **prefer-namespace-keyword**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/prefer-namespace-keyword",
      "slug": "typescript-eslint-prefer-namespace-keyword",
      "title": "Require using \`namespace\` keyword over \`module\` keyword to declare custom TypeScript modules",
    },
    {
      "description": "ESLint rule **triple-slash-reference**, from _@typescript-eslint_ plugin.",
      "docsUrl": "https://typescript-eslint.io/rules/triple-slash-reference",
      "slug": "typescript-eslint-triple-slash-reference",
      "title": "Disallow certain triple slash directives in favor of ES6-style import declarations",
    },
    {
      "description": "ESLint rule **no-var**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-var",
      "slug": "no-var",
      "title": "Require \`let\` or \`const\` instead of \`var\`",
    },
    {
      "description": "ESLint rule **prefer-const**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/prefer-const",
      "slug": "prefer-const",
      "title": "Require \`const\` declarations for variables that are never reassigned after declared",
    },
    {
      "description": "ESLint rule **prefer-rest-params**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/prefer-rest-params",
      "slug": "prefer-rest-params",
      "title": "Require rest parameters instead of \`arguments\`",
    },
    {
      "description": "ESLint rule **prefer-spread**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/prefer-spread",
      "slug": "prefer-spread",
      "title": "Require spread operators instead of \`.apply()\`",
    },
    {
      "description": "ESLint rule **for-direction**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/for-direction",
      "slug": "for-direction",
      "title": "Enforce \\"for\\" loop update clause moving the counter in the right direction",
    },
    {
      "description": "ESLint rule **no-async-promise-executor**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-async-promise-executor",
      "slug": "no-async-promise-executor",
      "title": "Disallow using an async function as a Promise executor",
    },
    {
      "description": "ESLint rule **no-case-declarations**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-case-declarations",
      "slug": "no-case-declarations",
      "title": "Disallow lexical declarations in case clauses",
    },
    {
      "description": "ESLint rule **no-class-assign**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-class-assign",
      "slug": "no-class-assign",
      "title": "Disallow reassigning class members",
    },
    {
      "description": "ESLint rule **no-compare-neg-zero**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-compare-neg-zero",
      "slug": "no-compare-neg-zero",
      "title": "Disallow comparing against -0",
    },
    {
      "description": "ESLint rule **no-cond-assign**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-cond-assign",
      "slug": "no-cond-assign",
      "title": "Disallow assignment operators in conditional expressions",
    },
    {
      "description": "ESLint rule **no-constant-condition**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-constant-condition",
      "slug": "no-constant-condition",
      "title": "Disallow constant expressions in conditions",
    },
    {
      "description": "ESLint rule **no-control-regex**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-control-regex",
      "slug": "no-control-regex",
      "title": "Disallow control characters in regular expressions",
    },
    {
      "description": "ESLint rule **no-debugger**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-debugger",
      "slug": "no-debugger",
      "title": "Disallow the use of \`debugger\`",
    },
    {
      "description": "ESLint rule **no-delete-var**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-delete-var",
      "slug": "no-delete-var",
      "title": "Disallow deleting variables",
    },
    {
      "description": "ESLint rule **no-dupe-else-if**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-dupe-else-if",
      "slug": "no-dupe-else-if",
      "title": "Disallow duplicate conditions in if-else-if chains",
    },
    {
      "description": "ESLint rule **no-duplicate-case**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-duplicate-case",
      "slug": "no-duplicate-case",
      "title": "Disallow duplicate case labels",
    },
    {
      "description": "ESLint rule **no-empty**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-empty",
      "slug": "no-empty",
      "title": "Disallow empty block statements",
    },
    {
      "description": "ESLint rule **no-empty-character-class**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-empty-character-class",
      "slug": "no-empty-character-class",
      "title": "Disallow empty character classes in regular expressions",
    },
    {
      "description": "ESLint rule **no-empty-pattern**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-empty-pattern",
      "slug": "no-empty-pattern",
      "title": "Disallow empty destructuring patterns",
    },
    {
      "description": "ESLint rule **no-ex-assign**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-ex-assign",
      "slug": "no-ex-assign",
      "title": "Disallow reassigning exceptions in \`catch\` clauses",
    },
    {
      "description": "ESLint rule **no-extra-boolean-cast**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-extra-boolean-cast",
      "slug": "no-extra-boolean-cast",
      "title": "Disallow unnecessary boolean casts",
    },
    {
      "description": "ESLint rule **no-fallthrough**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-fallthrough",
      "slug": "no-fallthrough",
      "title": "Disallow fallthrough of \`case\` statements",
    },
    {
      "description": "ESLint rule **no-global-assign**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-global-assign",
      "slug": "no-global-assign",
      "title": "Disallow assignments to native objects or read-only global variables",
    },
    {
      "description": "ESLint rule **no-inner-declarations**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-inner-declarations",
      "slug": "no-inner-declarations",
      "title": "Disallow variable or \`function\` declarations in nested blocks",
    },
    {
      "description": "ESLint rule **no-invalid-regexp**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-invalid-regexp",
      "slug": "no-invalid-regexp",
      "title": "Disallow invalid regular expression strings in \`RegExp\` constructors",
    },
    {
      "description": "ESLint rule **no-irregular-whitespace**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-irregular-whitespace",
      "slug": "no-irregular-whitespace",
      "title": "Disallow irregular whitespace",
    },
    {
      "description": "ESLint rule **no-misleading-character-class**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-misleading-character-class",
      "slug": "no-misleading-character-class",
      "title": "Disallow characters which are made with multiple code points in character class syntax",
    },
    {
      "description": "ESLint rule **no-mixed-spaces-and-tabs**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-mixed-spaces-and-tabs",
      "slug": "no-mixed-spaces-and-tabs",
      "title": "Disallow mixed spaces and tabs for indentation",
    },
    {
      "description": "ESLint rule **no-nonoctal-decimal-escape**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-nonoctal-decimal-escape",
      "slug": "no-nonoctal-decimal-escape",
      "title": "Disallow \`\\\\8\` and \`\\\\9\` escape sequences in string literals",
    },
    {
      "description": "ESLint rule **no-octal**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-octal",
      "slug": "no-octal",
      "title": "Disallow octal literals",
    },
    {
      "description": "ESLint rule **no-prototype-builtins**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-prototype-builtins",
      "slug": "no-prototype-builtins",
      "title": "Disallow calling some \`Object.prototype\` methods directly on objects",
    },
    {
      "description": "ESLint rule **no-regex-spaces**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-regex-spaces",
      "slug": "no-regex-spaces",
      "title": "Disallow multiple spaces in regular expressions",
    },
    {
      "description": "ESLint rule **no-self-assign**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-self-assign",
      "slug": "no-self-assign",
      "title": "Disallow assignments where both sides are exactly the same",
    },
    {
      "description": "ESLint rule **no-shadow-restricted-names**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-shadow-restricted-names",
      "slug": "no-shadow-restricted-names",
      "title": "Disallow identifiers from shadowing restricted names",
    },
    {
      "description": "ESLint rule **no-sparse-arrays**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-sparse-arrays",
      "slug": "no-sparse-arrays",
      "title": "Disallow sparse arrays",
    },
    {
      "description": "ESLint rule **no-unexpected-multiline**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-unexpected-multiline",
      "slug": "no-unexpected-multiline",
      "title": "Disallow confusing multiline expressions",
    },
    {
      "description": "ESLint rule **no-unsafe-finally**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-unsafe-finally",
      "slug": "no-unsafe-finally",
      "title": "Disallow control flow statements in \`finally\` blocks",
    },
    {
      "description": "ESLint rule **no-unsafe-optional-chaining**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-unsafe-optional-chaining",
      "slug": "no-unsafe-optional-chaining",
      "title": "Disallow use of optional chaining in contexts where the \`undefined\` value is not allowed",
    },
    {
      "description": "ESLint rule **no-unused-labels**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-unused-labels",
      "slug": "no-unused-labels",
      "title": "Disallow unused labels",
    },
    {
      "description": "ESLint rule **no-useless-backreference**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-useless-backreference",
      "slug": "no-useless-backreference",
      "title": "Disallow useless backreferences in regular expressions",
    },
    {
      "description": "ESLint rule **no-useless-catch**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-useless-catch",
      "slug": "no-useless-catch",
      "title": "Disallow unnecessary \`catch\` clauses",
    },
    {
      "description": "ESLint rule **no-useless-escape**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-useless-escape",
      "slug": "no-useless-escape",
      "title": "Disallow unnecessary escape characters",
    },
    {
      "description": "ESLint rule **no-with**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-with",
      "slug": "no-with",
      "title": "Disallow \`with\` statements",
    },
    {
      "description": "ESLint rule **require-yield**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/require-yield",
      "slug": "require-yield",
      "title": "Require generator functions to contain \`yield\`",
    },
    {
      "description": "ESLint rule **use-isnan**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/use-isnan",
      "slug": "use-isnan",
      "title": "Require calls to \`isNaN()\` when checking for \`NaN\`",
    },
    {
      "description": "ESLint rule **enforce-module-boundaries**, from _@nx_ plugin.

Custom options:

\`\`\`json
{
  \\"enforceBuildableLibDependency\\": true,
  \\"allow\\": [],
  \\"depConstraints\\": [
    {
      \\"sourceTag\\": \\"*\\",
      \\"onlyDependOnLibsWithTags\\": [
        \\"*\\"
      ]
    }
  ]
}
\`\`\`",
      "slug": "nx-enforce-module-boundaries-9dba9763586d15c6",
      "title": "Ensure that module boundaries are respected within the monorepo",
    },
    {
      "description": "ESLint rule **dependency-checks**, from _@nx_ plugin.",
      "slug": "nx-dependency-checks",
      "title": "Checks dependencies in project's package.json for version mismatches",
    },
  ],
  "description": "Official Code PushUp ESLint plugin",
  "groups": [
    {
      "description": "Code that either will cause an error or may cause confusing behavior. Developers should consider this a high priority to resolve.",
      "refs": [
        {
          "slug": "typescript-eslint-ban-ts-comment",
          "weight": 1,
        },
        {
          "slug": "typescript-eslint-no-extra-non-null-assertion",
          "weight": 1,
        },
        {
          "slug": "typescript-eslint-no-loss-of-precision",
          "weight": 1,
        },
        {
          "slug": "typescript-eslint-no-misused-new",
          "weight": 1,
        },
        {
          "slug": "typescript-eslint-no-non-null-asserted-optional-chain",
          "weight": 1,
        },
        {
          "slug": "typescript-eslint-no-non-null-assertion",
          "weight": 1,
        },
        {
          "slug": "typescript-eslint-no-unused-vars",
          "weight": 1,
        },
        {
          "slug": "typescript-eslint-no-var-requires",
          "weight": 1,
        },
        {
          "slug": "for-direction",
          "weight": 1,
        },
        {
          "slug": "no-async-promise-executor",
          "weight": 1,
        },
        {
          "slug": "no-class-assign",
          "weight": 1,
        },
        {
          "slug": "no-compare-neg-zero",
          "weight": 1,
        },
        {
          "slug": "no-cond-assign",
          "weight": 1,
        },
        {
          "slug": "no-constant-condition",
          "weight": 1,
        },
        {
          "slug": "no-control-regex",
          "weight": 1,
        },
        {
          "slug": "no-debugger",
          "weight": 1,
        },
        {
          "slug": "no-dupe-else-if",
          "weight": 1,
        },
        {
          "slug": "no-duplicate-case",
          "weight": 1,
        },
        {
          "slug": "no-empty-character-class",
          "weight": 1,
        },
        {
          "slug": "no-empty-pattern",
          "weight": 1,
        },
        {
          "slug": "no-ex-assign",
          "weight": 1,
        },
        {
          "slug": "no-fallthrough",
          "weight": 1,
        },
        {
          "slug": "no-inner-declarations",
          "weight": 1,
        },
        {
          "slug": "no-invalid-regexp",
          "weight": 1,
        },
        {
          "slug": "no-irregular-whitespace",
          "weight": 1,
        },
        {
          "slug": "no-misleading-character-class",
          "weight": 1,
        },
        {
          "slug": "no-prototype-builtins",
          "weight": 1,
        },
        {
          "slug": "no-self-assign",
          "weight": 1,
        },
        {
          "slug": "no-sparse-arrays",
          "weight": 1,
        },
        {
          "slug": "no-unexpected-multiline",
          "weight": 1,
        },
        {
          "slug": "no-unsafe-finally",
          "weight": 1,
        },
        {
          "slug": "no-unsafe-optional-chaining",
          "weight": 1,
        },
        {
          "slug": "no-useless-backreference",
          "weight": 1,
        },
        {
          "slug": "use-isnan",
          "weight": 1,
        },
      ],
      "slug": "problems",
      "title": "Problems",
    },
    {
      "description": "Something that could be done in a better way but no errors will occur if the code isn't changed.",
      "refs": [
        {
          "slug": "typescript-eslint-adjacent-overload-signatures",
          "weight": 1,
        },
        {
          "slug": "typescript-eslint-ban-types",
          "weight": 1,
        },
        {
          "slug": "typescript-eslint-no-array-constructor",
          "weight": 1,
        },
        {
          "slug": "typescript-eslint-no-empty-function",
          "weight": 1,
        },
        {
          "slug": "typescript-eslint-no-empty-interface",
          "weight": 1,
        },
        {
          "slug": "typescript-eslint-no-explicit-any",
          "weight": 1,
        },
        {
          "slug": "typescript-eslint-no-extra-semi",
          "weight": 1,
        },
        {
          "slug": "typescript-eslint-no-inferrable-types",
          "weight": 1,
        },
        {
          "slug": "typescript-eslint-no-namespace",
          "weight": 1,
        },
        {
          "slug": "typescript-eslint-no-this-alias",
          "weight": 1,
        },
        {
          "slug": "typescript-eslint-no-unnecessary-type-constraint",
          "weight": 1,
        },
        {
          "slug": "typescript-eslint-prefer-as-const",
          "weight": 1,
        },
        {
          "slug": "typescript-eslint-prefer-namespace-keyword",
          "weight": 1,
        },
        {
          "slug": "typescript-eslint-triple-slash-reference",
          "weight": 1,
        },
        {
          "slug": "no-var",
          "weight": 1,
        },
        {
          "slug": "prefer-const",
          "weight": 1,
        },
        {
          "slug": "prefer-rest-params",
          "weight": 1,
        },
        {
          "slug": "prefer-spread",
          "weight": 1,
        },
        {
          "slug": "no-case-declarations",
          "weight": 1,
        },
        {
          "slug": "no-delete-var",
          "weight": 1,
        },
        {
          "slug": "no-empty",
          "weight": 1,
        },
        {
          "slug": "no-extra-boolean-cast",
          "weight": 1,
        },
        {
          "slug": "no-global-assign",
          "weight": 1,
        },
        {
          "slug": "no-nonoctal-decimal-escape",
          "weight": 1,
        },
        {
          "slug": "no-octal",
          "weight": 1,
        },
        {
          "slug": "no-regex-spaces",
          "weight": 1,
        },
        {
          "slug": "no-shadow-restricted-names",
          "weight": 1,
        },
        {
          "slug": "no-unused-labels",
          "weight": 1,
        },
        {
          "slug": "no-useless-catch",
          "weight": 1,
        },
        {
          "slug": "no-useless-escape",
          "weight": 1,
        },
        {
          "slug": "no-with",
          "weight": 1,
        },
        {
          "slug": "require-yield",
          "weight": 1,
        },
        {
          "slug": "nx-enforce-module-boundaries-9dba9763586d15c6",
          "weight": 1,
        },
        {
          "slug": "nx-dependency-checks",
          "weight": 1,
        },
      ],
      "slug": "suggestions",
      "title": "Suggestions",
    },
    {
      "description": "Primarily about whitespace, semicolons, commas, and parentheses, all the parts of the program that determine how the code looks rather than how it executes.",
      "refs": [
        {
          "slug": "no-mixed-spaces-and-tabs",
          "weight": 1,
        },
      ],
      "slug": "formatting",
      "title": "Formatting",
    },
  ],
  "icon": "eslint",
  "packageName": "@code-pushup/eslint-plugin",
  "runner": {
    "args": [
      "<dirname>/bin.js",
      "typescript-eslint-adjacent-overload-signatures,typescript-eslint-ban-ts-comment,typescript-eslint-ban-types,typescript-eslint-no-array-constructor,typescript-eslint-no-empty-function,typescript-eslint-no-empty-interface,typescript-eslint-no-explicit-any,typescript-eslint-no-extra-non-null-assertion,typescript-eslint-no-extra-semi,typescript-eslint-no-inferrable-types,typescript-eslint-no-loss-of-precision,typescript-eslint-no-misused-new,typescript-eslint-no-namespace,typescript-eslint-no-non-null-asserted-optional-chain,typescript-eslint-no-non-null-assertion,typescript-eslint-no-this-alias,typescript-eslint-no-unnecessary-type-constraint,typescript-eslint-no-unused-vars,typescript-eslint-no-var-requires,typescript-eslint-prefer-as-const,typescript-eslint-prefer-namespace-keyword,typescript-eslint-triple-slash-reference,no-var,prefer-const,prefer-rest-params,prefer-spread,for-direction,no-async-promise-executor,no-case-declarations,no-class-assign,no-compare-neg-zero,no-cond-assign,no-constant-condition,no-control-regex,no-debugger,no-delete-var,no-dupe-else-if,no-duplicate-case,no-empty,no-empty-character-class,no-empty-pattern,no-ex-assign,no-extra-boolean-cast,no-fallthrough,no-global-assign,no-inner-declarations,no-invalid-regexp,no-irregular-whitespace,no-misleading-character-class,no-mixed-spaces-and-tabs,no-nonoctal-decimal-escape,no-octal,no-prototype-builtins,no-regex-spaces,no-self-assign,no-shadow-restricted-names,no-sparse-arrays,no-unexpected-multiline,no-unsafe-finally,no-unsafe-optional-chaining,no-unused-labels,no-useless-backreference,no-useless-catch,no-useless-escape,no-with,require-yield,use-isnan,nx-enforce-module-boundaries-9dba9763586d15c6,nx-dependency-checks",
      "./packages/utils/.eslintrc.json",
      "'packages/utils/**/*.ts'",
      "'packages/utils/**/*.json'",
    ],
    "command": "node",
    "outputFile": "node_modules/.code-pushup/eslint/runner-output.json",
  },
  "slug": "eslint",
  "title": "ESLint",
  "version": "0.0.1",
}
`;

exports[`eslintPlugin > should initialize ESLint plugin for React application 1`] = `
{
  "audits": [
    {
      "description": "ESLint rule **no-cond-assign**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-cond-assign",
      "slug": "no-cond-assign",
      "title": "Disallow assignment operators in conditional expressions",
    },
    {
      "description": "ESLint rule **no-const-assign**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-const-assign",
      "slug": "no-const-assign",
      "title": "Disallow reassigning \`const\` variables",
    },
    {
      "description": "ESLint rule **no-debugger**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-debugger",
      "slug": "no-debugger",
      "title": "Disallow the use of \`debugger\`",
    },
    {
      "description": "ESLint rule **no-invalid-regexp**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-invalid-regexp",
      "slug": "no-invalid-regexp",
      "title": "Disallow invalid regular expression strings in \`RegExp\` constructors",
    },
    {
      "description": "ESLint rule **no-undef**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-undef",
      "slug": "no-undef",
      "title": "Disallow the use of undeclared variables unless mentioned in \`/*global */\` comments",
    },
    {
      "description": "ESLint rule **no-unreachable-loop**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-unreachable-loop",
      "slug": "no-unreachable-loop",
      "title": "Disallow loops with a body that allows only one iteration",
    },
    {
      "description": "ESLint rule **no-unsafe-negation**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-unsafe-negation",
      "slug": "no-unsafe-negation",
      "title": "Disallow negating the left operand of relational operators",
    },
    {
      "description": "ESLint rule **no-unsafe-optional-chaining**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-unsafe-optional-chaining",
      "slug": "no-unsafe-optional-chaining",
      "title": "Disallow use of optional chaining in contexts where the \`undefined\` value is not allowed",
    },
    {
      "description": "ESLint rule **no-unused-vars**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-unused-vars",
      "slug": "no-unused-vars",
      "title": "Disallow unused variables",
    },
    {
      "description": "ESLint rule **use-isnan**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/use-isnan",
      "slug": "use-isnan",
      "title": "Require calls to \`isNaN()\` when checking for \`NaN\`",
    },
    {
      "description": "ESLint rule **valid-typeof**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/valid-typeof",
      "slug": "valid-typeof",
      "title": "Enforce comparing \`typeof\` expressions against valid strings",
    },
    {
      "description": "ESLint rule **arrow-body-style**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/arrow-body-style",
      "slug": "arrow-body-style",
      "title": "Require braces around arrow function bodies",
    },
    {
      "description": "ESLint rule **camelcase**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/camelcase",
      "slug": "camelcase",
      "title": "Enforce camelcase naming convention",
    },
    {
      "description": "ESLint rule **curly**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/curly",
      "slug": "curly",
      "title": "Enforce consistent brace style for all control statements",
    },
    {
      "description": "ESLint rule **eqeqeq**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/eqeqeq",
      "slug": "eqeqeq",
      "title": "Require the use of \`===\` and \`!==\`",
    },
    {
      "description": "ESLint rule **max-lines-per-function**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/max-lines-per-function",
      "slug": "max-lines-per-function",
      "title": "Enforce a maximum number of lines of code in a function",
    },
    {
      "description": "ESLint rule **max-lines**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/max-lines",
      "slug": "max-lines",
      "title": "Enforce a maximum number of lines per file",
    },
    {
      "description": "ESLint rule **no-shadow**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-shadow",
      "slug": "no-shadow",
      "title": "Disallow variable declarations from shadowing variables declared in the outer scope",
    },
    {
      "description": "ESLint rule **no-var**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-var",
      "slug": "no-var",
      "title": "Require \`let\` or \`const\` instead of \`var\`",
    },
    {
      "description": "ESLint rule **object-shorthand**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/object-shorthand",
      "slug": "object-shorthand",
      "title": "Require or disallow method and property shorthand syntax for object literals",
    },
    {
      "description": "ESLint rule **prefer-arrow-callback**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/prefer-arrow-callback",
      "slug": "prefer-arrow-callback",
      "title": "Require using arrow functions for callbacks",
    },
    {
      "description": "ESLint rule **prefer-const**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/prefer-const",
      "slug": "prefer-const",
      "title": "Require \`const\` declarations for variables that are never reassigned after declared",
    },
    {
      "description": "ESLint rule **prefer-object-spread**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/prefer-object-spread",
      "slug": "prefer-object-spread",
      "title": "Disallow using Object.assign with an object literal as the first argument and prefer the use of object spread instead",
    },
    {
      "description": "ESLint rule **yoda**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/yoda",
      "slug": "yoda",
      "title": "Require or disallow \\"Yoda\\" conditions",
    },
    {
      "description": "ESLint rule **jsx-key**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-key.md",
      "slug": "react-jsx-key",
      "title": "Disallow missing \`key\` props in iterators/collection literals",
    },
    {
      "description": "ESLint rule **prop-types**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/prop-types.md",
      "slug": "react-prop-types",
      "title": "Disallow missing props validation in a React component definition",
    },
    {
      "description": "ESLint rule **react-in-jsx-scope**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/react-in-jsx-scope.md",
      "slug": "react-react-in-jsx-scope",
      "title": "Disallow missing React when using JSX",
    },
    {
      "description": "ESLint rule **rules-of-hooks**, from _react-hooks_ plugin.",
      "docsUrl": "https://reactjs.org/docs/hooks-rules.html",
      "slug": "react-hooks-rules-of-hooks",
      "title": "enforces the Rules of Hooks",
    },
    {
      "description": "ESLint rule **exhaustive-deps**, from _react-hooks_ plugin.",
      "docsUrl": "https://github.com/facebook/react/issues/14920",
      "slug": "react-hooks-exhaustive-deps",
      "title": "verifies the list of dependencies for Hooks like useEffect and similar",
    },
    {
      "description": "ESLint rule **display-name**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/display-name.md",
      "slug": "react-display-name",
      "title": "Disallow missing displayName in a React component definition",
    },
    {
      "description": "ESLint rule **jsx-no-comment-textnodes**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-comment-textnodes.md",
      "slug": "react-jsx-no-comment-textnodes",
      "title": "Disallow comments from being inserted as text nodes",
    },
    {
      "description": "ESLint rule **jsx-no-duplicate-props**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-duplicate-props.md",
      "slug": "react-jsx-no-duplicate-props",
      "title": "Disallow duplicate properties in JSX",
    },
    {
      "description": "ESLint rule **jsx-no-target-blank**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-target-blank.md",
      "slug": "react-jsx-no-target-blank",
      "title": "Disallow \`target=\\"_blank\\"\` attribute without \`rel=\\"noreferrer\\"\`",
    },
    {
      "description": "ESLint rule **jsx-no-undef**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-undef.md",
      "slug": "react-jsx-no-undef",
      "title": "Disallow undeclared variables in JSX",
    },
    {
      "description": "ESLint rule **jsx-uses-react**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-uses-react.md",
      "slug": "react-jsx-uses-react",
      "title": "Disallow React to be incorrectly marked as unused",
    },
    {
      "description": "ESLint rule **jsx-uses-vars**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-uses-vars.md",
      "slug": "react-jsx-uses-vars",
      "title": "Disallow variables used in JSX to be incorrectly marked as unused",
    },
    {
      "description": "ESLint rule **no-children-prop**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-children-prop.md",
      "slug": "react-no-children-prop",
      "title": "Disallow passing of children as props",
    },
    {
      "description": "ESLint rule **no-danger-with-children**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-danger-with-children.md",
      "slug": "react-no-danger-with-children",
      "title": "Disallow when a DOM element is using both children and dangerouslySetInnerHTML",
    },
    {
      "description": "ESLint rule **no-deprecated**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-deprecated.md",
      "slug": "react-no-deprecated",
      "title": "Disallow usage of deprecated methods",
    },
    {
      "description": "ESLint rule **no-direct-mutation-state**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-direct-mutation-state.md",
      "slug": "react-no-direct-mutation-state",
      "title": "Disallow direct mutation of this.state",
    },
    {
      "description": "ESLint rule **no-find-dom-node**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-find-dom-node.md",
      "slug": "react-no-find-dom-node",
      "title": "Disallow usage of findDOMNode",
    },
    {
      "description": "ESLint rule **no-is-mounted**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-is-mounted.md",
      "slug": "react-no-is-mounted",
      "title": "Disallow usage of isMounted",
    },
    {
      "description": "ESLint rule **no-render-return-value**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-render-return-value.md",
      "slug": "react-no-render-return-value",
      "title": "Disallow usage of the return value of ReactDOM.render",
    },
    {
      "description": "ESLint rule **no-string-refs**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-string-refs.md",
      "slug": "react-no-string-refs",
      "title": "Disallow using string references",
    },
    {
      "description": "ESLint rule **no-unescaped-entities**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-unescaped-entities.md",
      "slug": "react-no-unescaped-entities",
      "title": "Disallow unescaped HTML entities from appearing in markup",
    },
    {
      "description": "ESLint rule **no-unknown-property**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-unknown-property.md",
      "slug": "react-no-unknown-property",
      "title": "Disallow usage of unknown DOM property",
    },
    {
      "description": "ESLint rule **require-render-return**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/require-render-return.md",
      "slug": "react-require-render-return",
      "title": "Enforce ES5 or ES6 class for returning value in render function",
    },
  ],
  "description": "Official Code PushUp ESLint plugin",
  "groups": [
    {
      "description": "Code that either will cause an error or may cause confusing behavior. Developers should consider this a high priority to resolve.",
      "refs": [
        {
          "slug": "no-cond-assign",
          "weight": 1,
        },
        {
          "slug": "no-const-assign",
          "weight": 1,
        },
        {
          "slug": "no-debugger",
          "weight": 1,
        },
        {
          "slug": "no-invalid-regexp",
          "weight": 1,
        },
        {
          "slug": "no-undef",
          "weight": 1,
        },
        {
          "slug": "no-unreachable-loop",
          "weight": 1,
        },
        {
          "slug": "no-unsafe-negation",
          "weight": 1,
        },
        {
          "slug": "no-unsafe-optional-chaining",
          "weight": 1,
        },
        {
          "slug": "no-unused-vars",
          "weight": 1,
        },
        {
          "slug": "use-isnan",
          "weight": 1,
        },
        {
          "slug": "valid-typeof",
          "weight": 1,
        },
        {
          "slug": "react-hooks-rules-of-hooks",
          "weight": 1,
        },
      ],
      "slug": "problems",
      "title": "Problems",
    },
    {
      "description": "Something that could be done in a better way but no errors will occur if the code isn't changed.",
      "refs": [
        {
          "slug": "arrow-body-style",
          "weight": 1,
        },
        {
          "slug": "camelcase",
          "weight": 1,
        },
        {
          "slug": "curly",
          "weight": 1,
        },
        {
          "slug": "eqeqeq",
          "weight": 1,
        },
        {
          "slug": "max-lines-per-function",
          "weight": 1,
        },
        {
          "slug": "max-lines",
          "weight": 1,
        },
        {
          "slug": "no-shadow",
          "weight": 1,
        },
        {
          "slug": "no-var",
          "weight": 1,
        },
        {
          "slug": "object-shorthand",
          "weight": 1,
        },
        {
          "slug": "prefer-arrow-callback",
          "weight": 1,
        },
        {
          "slug": "prefer-const",
          "weight": 1,
        },
        {
          "slug": "prefer-object-spread",
          "weight": 1,
        },
        {
          "slug": "yoda",
          "weight": 1,
        },
        {
          "slug": "react-hooks-exhaustive-deps",
          "weight": 1,
        },
      ],
      "slug": "suggestions",
      "title": "Suggestions",
    },
    {
      "description": "Primarily about whitespace, semicolons, commas, and parentheses, all the parts of the program that determine how the code looks rather than how it executes.",
      "refs": [],
      "slug": "formatting",
      "title": "Formatting",
    },
    {
      "refs": [
        {
          "slug": "react-prop-types",
          "weight": 1,
        },
        {
          "slug": "react-display-name",
          "weight": 1,
        },
        {
          "slug": "react-jsx-no-target-blank",
          "weight": 1,
        },
        {
          "slug": "react-jsx-uses-react",
          "weight": 1,
        },
        {
          "slug": "react-jsx-uses-vars",
          "weight": 1,
        },
        {
          "slug": "react-no-children-prop",
          "weight": 1,
        },
        {
          "slug": "react-no-deprecated",
          "weight": 1,
        },
        {
          "slug": "react-no-find-dom-node",
          "weight": 1,
        },
        {
          "slug": "react-no-is-mounted",
          "weight": 1,
        },
        {
          "slug": "react-no-render-return-value",
          "weight": 1,
        },
        {
          "slug": "react-no-string-refs",
          "weight": 1,
        },
      ],
      "slug": "react-best-practices",
      "title": "Best Practices (react)",
    },
    {
      "refs": [
        {
          "slug": "react-jsx-key",
          "weight": 1,
        },
        {
          "slug": "react-react-in-jsx-scope",
          "weight": 1,
        },
        {
          "slug": "react-jsx-no-comment-textnodes",
          "weight": 1,
        },
        {
          "slug": "react-jsx-no-duplicate-props",
          "weight": 1,
        },
        {
          "slug": "react-jsx-no-undef",
          "weight": 1,
        },
        {
          "slug": "react-no-danger-with-children",
          "weight": 1,
        },
        {
          "slug": "react-no-direct-mutation-state",
          "weight": 1,
        },
        {
          "slug": "react-no-unescaped-entities",
          "weight": 1,
        },
        {
          "slug": "react-no-unknown-property",
          "weight": 1,
        },
        {
          "slug": "react-require-render-return",
          "weight": 1,
        },
      ],
      "slug": "react-possible-errors",
      "title": "Possible Errors (react)",
    },
  ],
  "icon": "eslint",
  "packageName": "@code-pushup/eslint-plugin",
  "runner": {
    "args": [
      "<dirname>/bin.js",
      "no-cond-assign,no-const-assign,no-debugger,no-invalid-regexp,no-undef,no-unreachable-loop,no-unsafe-negation,no-unsafe-optional-chaining,no-unused-vars,use-isnan,valid-typeof,arrow-body-style,camelcase,curly,eqeqeq,max-lines-per-function,max-lines,no-shadow,no-var,object-shorthand,prefer-arrow-callback,prefer-const,prefer-object-spread,yoda,react-jsx-key,react-prop-types,react-react-in-jsx-scope,react-hooks-rules-of-hooks,react-hooks-exhaustive-deps,react-display-name,react-jsx-no-comment-textnodes,react-jsx-no-duplicate-props,react-jsx-no-target-blank,react-jsx-no-undef,react-jsx-uses-react,react-jsx-uses-vars,react-no-children-prop,react-no-danger-with-children,react-no-deprecated,react-no-direct-mutation-state,react-no-find-dom-node,react-no-is-mounted,react-no-render-return-value,react-no-string-refs,react-no-unescaped-entities,react-no-unknown-property,react-require-render-return",
      ".eslintrc.js",
      "'src/**/*.js'",
      "'src/**/*.jsx'",
    ],
    "command": "node",
    "outputFile": "node_modules/.code-pushup/eslint/runner-output.json",
  },
  "slug": "eslint",
  "title": "ESLint",
  "version": "0.0.1",
}
`;
