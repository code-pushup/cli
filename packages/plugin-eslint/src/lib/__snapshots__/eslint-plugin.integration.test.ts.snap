// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`eslintPlugin > should initialize ESLint plugin for React application 1`] = `
{
  "audits": [
    {
      "description": "ESLint rule **no-cond-assign**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-cond-assign",
      "slug": "no-cond-assign-4da1eac06e945b1a",
      "title": "Disallow assignment operators in conditional expressions",
    },
    {
      "description": "ESLint rule **no-const-assign**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-const-assign",
      "slug": "no-const-assign",
      "title": "Disallow reassigning \`const\` variables",
    },
    {
      "description": "ESLint rule **no-debugger**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-debugger",
      "slug": "no-debugger",
      "title": "Disallow the use of \`debugger\`",
    },
    {
      "description": "ESLint rule **no-invalid-regexp**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-invalid-regexp",
      "slug": "no-invalid-regexp-9b874a94de5d65c6",
      "title": "Disallow invalid regular expression strings in \`RegExp\` constructors",
    },
    {
      "description": "ESLint rule **no-undef**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-undef",
      "slug": "no-undef-1c0a571cbd314966",
      "title": "Disallow the use of undeclared variables unless mentioned in \`/*global */\` comments",
    },
    {
      "description": "ESLint rule **no-unreachable-loop**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-unreachable-loop",
      "slug": "no-unreachable-loop-6bd5152d46f5cba7",
      "title": "Disallow loops with a body that allows only one iteration",
    },
    {
      "description": "ESLint rule **no-unsafe-negation**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-unsafe-negation",
      "slug": "no-unsafe-negation-1c3a548d96c1e95f",
      "title": "Disallow negating the left operand of relational operators",
    },
    {
      "description": "ESLint rule **no-unsafe-optional-chaining**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-unsafe-optional-chaining",
      "slug": "no-unsafe-optional-chaining-0724d742fbe97cb2",
      "title": "Disallow use of optional chaining in contexts where the \`undefined\` value is not allowed",
    },
    {
      "description": "ESLint rule **no-unused-vars**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-unused-vars",
      "slug": "no-unused-vars",
      "title": "Disallow unused variables",
    },
    {
      "description": "ESLint rule **use-isnan**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/use-isnan",
      "slug": "use-isnan-20b8ba68b5cc1ea7",
      "title": "Require calls to \`isNaN()\` when checking for \`NaN\`",
    },
    {
      "description": "ESLint rule **valid-typeof**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/valid-typeof",
      "slug": "valid-typeof-19926c783be07085",
      "title": "Enforce comparing \`typeof\` expressions against valid strings",
    },
    {
      "description": "ESLint rule **arrow-body-style**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/arrow-body-style",
      "slug": "arrow-body-style-61b676e8783b0a34",
      "title": "Require braces around arrow function bodies",
    },
    {
      "description": "ESLint rule **camelcase**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/camelcase",
      "slug": "camelcase-3568b92e56d6fcb0",
      "title": "Enforce camelcase naming convention",
    },
    {
      "description": "ESLint rule **curly**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/curly",
      "slug": "curly-da196f7d88e0421b",
      "title": "Enforce consistent brace style for all control statements",
    },
    {
      "description": "ESLint rule **eqeqeq**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/eqeqeq",
      "slug": "eqeqeq",
      "title": "Require the use of \`===\` and \`!==\`",
    },
    {
      "description": "ESLint rule **max-lines-per-function**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/max-lines-per-function",
      "slug": "max-lines-per-function",
      "title": "Enforce a maximum number of lines of code in a function",
    },
    {
      "description": "ESLint rule **max-lines**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/max-lines",
      "slug": "max-lines",
      "title": "Enforce a maximum number of lines per file",
    },
    {
      "description": "ESLint rule **no-shadow**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-shadow",
      "slug": "no-shadow-b9e07f46bb0b5444",
      "title": "Disallow variable declarations from shadowing variables declared in the outer scope",
    },
    {
      "description": "ESLint rule **no-var**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/no-var",
      "slug": "no-var",
      "title": "Require \`let\` or \`const\` instead of \`var\`",
    },
    {
      "description": "ESLint rule **object-shorthand**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/object-shorthand",
      "slug": "object-shorthand",
      "title": "Require or disallow method and property shorthand syntax for object literals",
    },
    {
      "description": "ESLint rule **prefer-arrow-callback**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/prefer-arrow-callback",
      "slug": "prefer-arrow-callback-81999cc2a4967394",
      "title": "Require using arrow functions for callbacks",
    },
    {
      "description": "ESLint rule **prefer-const**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/prefer-const",
      "slug": "prefer-const-519d0b1dc698e7d6",
      "title": "Require \`const\` declarations for variables that are never reassigned after declared",
    },
    {
      "description": "ESLint rule **prefer-object-spread**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/prefer-object-spread",
      "slug": "prefer-object-spread",
      "title": "Disallow using Object.assign with an object literal as the first argument and prefer the use of object spread instead",
    },
    {
      "description": "ESLint rule **yoda**.",
      "docsUrl": "https://eslint.org/docs/latest/rules/yoda",
      "slug": "yoda-e0d68df5f54f65ab",
      "title": "Require or disallow "Yoda" conditions",
    },
    {
      "description": "ESLint rule **jsx-key**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-key.md",
      "slug": "react-jsx-key",
      "title": "Disallow missing \`key\` props in iterators/collection literals",
    },
    {
      "description": "ESLint rule **prop-types**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/prop-types.md",
      "slug": "react-prop-types",
      "title": "Disallow missing props validation in a React component definition",
    },
    {
      "description": "ESLint rule **react-in-jsx-scope**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/react-in-jsx-scope.md",
      "slug": "react-react-in-jsx-scope",
      "title": "Disallow missing React when using JSX",
    },
    {
      "description": "ESLint rule **jsx-uses-vars**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-uses-vars.md",
      "slug": "react-jsx-uses-vars",
      "title": "Disallow variables used in JSX to be incorrectly marked as unused",
    },
    {
      "description": "ESLint rule **jsx-uses-react**, from _react_ plugin.",
      "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-uses-react.md",
      "slug": "react-jsx-uses-react",
      "title": "Disallow React to be incorrectly marked as unused",
    },
    {
      "description": "ESLint rule **rules-of-hooks**, from _react-hooks_ plugin.",
      "docsUrl": "https://reactjs.org/docs/hooks-rules.html",
      "slug": "react-hooks-rules-of-hooks",
      "title": "enforces the Rules of Hooks",
    },
    {
      "description": "ESLint rule **exhaustive-deps**, from _react-hooks_ plugin.",
      "docsUrl": "https://github.com/facebook/react/issues/14920",
      "slug": "react-hooks-exhaustive-deps",
      "title": "verifies the list of dependencies for Hooks like useEffect and similar",
    },
  ],
  "description": "Official Code PushUp ESLint plugin",
  "docsUrl": "https://www.npmjs.com/package/@code-pushup/eslint-plugin",
  "groups": [
    {
      "description": "Code that either will cause an error or may cause confusing behavior. Developers should consider this a high priority to resolve.",
      "refs": [
        {
          "slug": "no-cond-assign-4da1eac06e945b1a",
          "weight": 1,
        },
        {
          "slug": "no-const-assign",
          "weight": 1,
        },
        {
          "slug": "no-debugger",
          "weight": 1,
        },
        {
          "slug": "no-invalid-regexp-9b874a94de5d65c6",
          "weight": 1,
        },
        {
          "slug": "no-undef-1c0a571cbd314966",
          "weight": 1,
        },
        {
          "slug": "no-unreachable-loop-6bd5152d46f5cba7",
          "weight": 1,
        },
        {
          "slug": "no-unsafe-negation-1c3a548d96c1e95f",
          "weight": 1,
        },
        {
          "slug": "no-unsafe-optional-chaining-0724d742fbe97cb2",
          "weight": 1,
        },
        {
          "slug": "no-unused-vars",
          "weight": 1,
        },
        {
          "slug": "use-isnan-20b8ba68b5cc1ea7",
          "weight": 1,
        },
        {
          "slug": "valid-typeof-19926c783be07085",
          "weight": 1,
        },
        {
          "slug": "react-hooks-rules-of-hooks",
          "weight": 1,
        },
      ],
      "slug": "problems",
      "title": "Problems",
    },
    {
      "description": "Something that could be done in a better way but no errors will occur if the code isn't changed.",
      "refs": [
        {
          "slug": "arrow-body-style-61b676e8783b0a34",
          "weight": 1,
        },
        {
          "slug": "camelcase-3568b92e56d6fcb0",
          "weight": 1,
        },
        {
          "slug": "curly-da196f7d88e0421b",
          "weight": 1,
        },
        {
          "slug": "eqeqeq",
          "weight": 1,
        },
        {
          "slug": "max-lines-per-function",
          "weight": 1,
        },
        {
          "slug": "max-lines",
          "weight": 1,
        },
        {
          "slug": "no-shadow-b9e07f46bb0b5444",
          "weight": 1,
        },
        {
          "slug": "no-var",
          "weight": 1,
        },
        {
          "slug": "object-shorthand",
          "weight": 1,
        },
        {
          "slug": "prefer-arrow-callback-81999cc2a4967394",
          "weight": 1,
        },
        {
          "slug": "prefer-const-519d0b1dc698e7d6",
          "weight": 1,
        },
        {
          "slug": "prefer-object-spread",
          "weight": 1,
        },
        {
          "slug": "yoda-e0d68df5f54f65ab",
          "weight": 1,
        },
        {
          "slug": "react-hooks-exhaustive-deps",
          "weight": 1,
        },
      ],
      "slug": "suggestions",
      "title": "Suggestions",
    },
    {
      "refs": [
        {
          "slug": "react-prop-types",
          "weight": 1,
        },
        {
          "slug": "react-jsx-uses-vars",
          "weight": 1,
        },
        {
          "slug": "react-jsx-uses-react",
          "weight": 1,
        },
      ],
      "slug": "react-best-practices",
      "title": "Best Practices (react)",
    },
    {
      "refs": [
        {
          "slug": "react-jsx-key",
          "weight": 1,
        },
        {
          "slug": "react-react-in-jsx-scope",
          "weight": 1,
        },
      ],
      "slug": "react-possible-errors",
      "title": "Possible Errors (react)",
    },
  ],
  "icon": "eslint",
  "packageName": "@code-pushup/eslint-plugin",
  "runner": {
    "args": [
      ""<dirname>/bin.js"",
      "--runnerConfigPath="node_modules/.code-pushup/eslint/<timestamp>/plugin-config.json"",
      "--runnerOutputPath="node_modules/.code-pushup/eslint/<timestamp>/runner-output.json"",
    ],
    "command": "node",
    "configFile": "node_modules/.code-pushup/eslint/<timestamp>/plugin-config.json",
    "outputFile": "node_modules/.code-pushup/eslint/<timestamp>/runner-output.json",
  },
  "slug": "eslint",
  "title": "ESLint",
  "version": Any<String>,
}
`;
