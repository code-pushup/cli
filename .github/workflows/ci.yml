name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NX_NON_NATIVE_HASHER: true
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  # Disable Nx optimizations for clean performance measurement
  NX_TUI: false
  NX_TASKS_RUNNER_DYNAMIC_OUTPUT: false
  NX_SKIP_LOG_GROUPING: true
  NX_GENERATE_QUIET: true
  NX_PERF_LOGGING: false
  NX_SKIP_NX_CACHE: true
  NX_SKIP_REMOTE_CACHE: true
  NX_DAEMON: false
  NX_PARALLEL: 1
  NX_BATCH_MODE: false
  # Keep this on
  NX_VERBOSE_LOGGING: true
  TIMING: 15

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Linter Old Eslint Version
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Set base and head for Nx affected commands
        uses: nrwl/nx-set-shas@v4
      - name: Install dependencies
        run: npm ci
      - name: Lint affected projects with default settings and old eslint version
        run: npx nx run-many -t lint --exclude models-transformers --stats

  lint-concurrency:
    runs-on: ubuntu-latest
    name: Linter with multithreading feature set to ${{ matrix.concurrency }}
    strategy:
      matrix:
        concurrency: ['off', 'auto', '1', '2', '3', '4', '5', '6']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Set base and head for Nx affected commands
        uses: nrwl/nx-set-shas@v4
      - name: Install dependencies
        run: npm ci
      - name: Lint affected projects with concurrency ${{ matrix.concurrency }}
        run: npx nx run-many -t lint-multi --exclude models-transformers --stats --concurrency ${{ matrix.concurrency }}
