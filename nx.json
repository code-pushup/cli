{
  "$schema": "./node_modules/nx/schemas/nx-schema.json",
  "namedInputs": {
    "default": ["{projectRoot}/**/*", "sharedGlobals"],
    "production": [
      "default",
      "!{projectRoot}/README.md",
      "!{projectRoot}/CHANGELOG.md",
      "!{projectRoot}/perf/**/*",
      "!{projectRoot}/tools/**/*",
      "!{projectRoot}/zod2md.config.ts",
      "!{projectRoot}/eslint.config.?(c)js",
      "!{workspaceRoot}/**/.code-pushup/**/*",
      "!{projectRoot}/code-pushup.config.?(*.).?(m)[jt]s",
      "!{projectRoot}/@(test|mocks|mock)/**/*",
      "!{projectRoot}/**/?(*.)test.[jt]s?(x)?(.snap)",
      "!{projectRoot}/**/?(*.)mocks.[jt]s?(x)",
      "!{projectRoot}/**/?(*.)mock.[jt]s?(x)",
      "!{projectRoot}/vitest.@(unit|int|e2e).config.[jt]s",
      "!{projectRoot}/dist/**/*",
      "!{projectRoot}/tsconfig.@(test|tools).json",
      "!{workspaceRoot}/**/(*.)coverage/**/*"
    ],
    "test-vitest-inputs": [
      "default",
      {
        "externalDependencies": ["vitest"]
      }
    ],
    "lint-eslint-inputs": [
      "default",
      {
        "externalDependencies": ["eslint"]
      }
    ],
    "typecheck-typescript-inputs": [
      "default",
      {
        "externalDependencies": ["typescript"]
      }
    ],
    "code-pushup-inputs": [
      "default",
      {
        "env": "NODE_OPTIONS"
      },
      {
        "env": "TSX_TSCONFIG_PATH"
      }
    ],
    "sharedGlobals": [
      {
        "runtime": "node -e \"console.log(require('os').platform())\""
      },
      {
        "runtime": "node -v"
      },
      {
        "runtime": "npm -v"
      }
    ]
  },
  "targetDefaults": {
    "lint": {
      "dependsOn": ["eslint-formatter-multi:build"],
      "inputs": ["lint-eslint-inputs"],
      "outputs": ["{projectRoot}/.eslint/**/*"],
      "cache": true,
      "executor": "nx:run-commands",
      "options": {
        "command": "eslint",
        "args": [
          "{projectRoot}/**/*.ts",
          "{projectRoot}/package.json",
          "--config={projectRoot}/eslint.config.js",
          "--max-warnings=0",
          "--no-warn-ignored",
          "--error-on-unmatched-pattern=false",
          "--format=./tools/eslint-formatter-multi/dist/src/index.js"
        ],
        "env": {
          "ESLINT_FORMATTER_CONFIG": "{\"outputDir\":\"{projectRoot}/.eslint\"}"
        }
      }
    },
    "build": {
      "dependsOn": ["^build"],
      "inputs": ["production", "^production"],
      "cache": true,
      "executor": "@nx/js:tsc",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "{projectRoot}/dist",
        "main": "{projectRoot}/src/index.ts",
        "tsConfig": "{projectRoot}/tsconfig.lib.json",
        "assets": ["{projectRoot}/*.md"]
      }
    },
    "unit-test": {
      "cache": true,
      "outputs": [
        "{workspaceRoot}/coverage/{projectName}/unit-tests/lcov.info"
      ],
      "executor": "@nx/vite:test",
      "options": {
        "configFile": "{projectRoot}/vitest.unit.config.ts",
        "coverage": {
          "enabled": true
        }
      }
    },
    "int-test": {
      "cache": true,
      "outputs": ["{workspaceRoot}/coverage/{projectName}/int-tests/lcov.info"],
      "executor": "@nx/vite:test",
      "options": {
        "configFile": "{projectRoot}/vitest.int.config.ts",
        "coverage": {
          "enabled": true
        }
      }
    },
    "e2e": {
      "dependsOn": ["^build"],
      "inputs": ["default"],
      "cache": true
    },
    "nxv-pkg-install": {
      "parallelism": false
    },
    "@nx/vite:test": {
      "cache": true,
      "inputs": ["test-vitest-inputs"],
      "options": {
        "passWithNoTests": true,
        "watch": false
      }
    },
    "code-pushup": {
      "cache": false,
      "outputs": [
        "{projectRoot}/.code-pushup/report.md",
        "{projectRoot}/.code-pushup/report.json"
      ],
      "executor": "nx:run-commands",
      "options": {
        "command": "node packages/cli/src/index.ts",
        "args": [
          "--no-progress",
          "--verbose",
          "--config={projectRoot}/code-pushup.config.ts",
          "--cache.read",
          "--persist.outputDir={projectRoot}/.code-pushup",
          "--upload.project=cli-{projectName}"
        ],
        "env": {
          "NODE_OPTIONS": "--import tsx",
          "TSX_TSCONFIG_PATH": "tsconfig.base.json"
        }
      }
    },
    "code-pushup-coverage": {
      "cache": true,
      "inputs": ["code-pushup-inputs", "test-vitest-inputs"],
      "outputs": ["{projectRoot}/.code-pushup/coverage/runner-output.json"],
      "executor": "nx:run-commands",
      "dependsOn": ["*-test"],
      "options": {
        "command": "node packages/cli/src/index.ts collect",
        "args": [
          "--no-progress",
          "--verbose",
          "--config={projectRoot}/code-pushup.config.ts",
          "--cache.write",
          "--onlyPlugins=coverage",
          "--persist.skipReports=true",
          "--persist.outputDir={projectRoot}/.code-pushup"
        ],
        "env": {
          "NODE_OPTIONS": "--import tsx",
          "TSX_TSCONFIG_PATH": "tsconfig.base.json"
        }
      }
    },
    "code-pushup-eslint": {
      "cache": true,
      "inputs": ["code-pushup-inputs", "lint-eslint-inputs"],
      "outputs": ["{projectRoot}/.code-pushup/eslint/runner-output.json"],
      "executor": "nx:run-commands",
      "options": {
        "command": "node packages/cli/src/index.ts collect",
        "args": [
          "--no-progress",
          "--verbose",
          "--config={projectRoot}/code-pushup.config.ts",
          "--cache.write",
          "--onlyPlugins=eslint",
          "--persist.skipReports",
          "--persist.outputDir={projectRoot}/.code-pushup"
        ],
        "env": {
          "NODE_OPTIONS": "--import tsx",
          "TSX_TSCONFIG_PATH": "tsconfig.base.json"
        }
      }
    },
    "code-pushup-js-packages": {
      "cache": false,
      "inputs": [
        {
          "runtime": "date +%Y-%m-%d"
        }
      ],
      "outputs": ["{projectRoot}/.code-pushup/js-packages/runner-output.json"],
      "executor": "nx:run-commands",
      "options": {
        "command": "node packages/cli/src/index.ts collect",
        "args": [
          "--no-progress",
          "--verbose",
          "--config={projectRoot}/code-pushup.config.ts",
          "--onlyPlugins=js-packages",
          "--persist.outputDir={projectRoot}/.code-pushup"
        ],
        "env": {
          "NODE_OPTIONS": "--import tsx",
          "TSX_TSCONFIG_PATH": "tsconfig.base.json"
        }
      }
    },
    "code-pushup-lighthouse": {
      "cache": true,
      "inputs": ["code-pushup-inputs", "production", "^production"],
      "outputs": ["{projectRoot}/.code-pushup/lighthouse/runner-output.json"],
      "executor": "nx:run-commands",
      "options": {
        "command": "node packages/cli/src/index.ts collect",
        "args": [
          "--no-progress",
          "--verbose",
          "--config={projectRoot}/code-pushup.config.ts",
          "--cache.write",
          "--onlyPlugins=lighthouse",
          "--persist.skipReports",
          "--persist.outputDir={projectRoot}/.code-pushup"
        ],
        "env": {
          "NODE_OPTIONS": "--import tsx",
          "TSX_TSCONFIG_PATH": "tsconfig.base.json"
        }
      }
    },
    "code-pushup-jsdocs": {
      "cache": true,
      "inputs": ["code-pushup-inputs", "typecheck-typescript-inputs"],
      "outputs": ["{projectRoot}/.code-pushup/jsdocs/runner-output.json"],
      "executor": "nx:run-commands",
      "options": {
        "command": "node packages/cli/src/index.ts collect",
        "args": [
          "--no-progress",
          "--verbose",
          "--config={projectRoot}/code-pushup.config.ts",
          "--cache.write",
          "--onlyPlugins=jsdocs",
          "--persist.skipReports",
          "--persist.outputDir={projectRoot}/.code-pushup"
        ],
        "env": {
          "NODE_OPTIONS": "--import tsx",
          "TSX_TSCONFIG_PATH": "tsconfig.base.json"
        }
      }
    },
    "code-pushup-typescript": {
      "cache": true,
      "inputs": ["code-pushup-inputs", "typecheck-typescript-inputs"],
      "outputs": ["{projectRoot}/.code-pushup/typescript/runner-output.json"],
      "executor": "nx:run-commands",
      "options": {
        "command": "node packages/cli/src/index.ts collect",
        "args": [
          "--no-progress",
          "--verbose",
          "--config={projectRoot}/code-pushup.config.ts",
          "--cache.write",
          "--onlyPlugins=typescript",
          "--persist.skipReports",
          "--persist.outputDir={projectRoot}/.code-pushup"
        ],
        "env": {
          "NODE_OPTIONS": "--import tsx",
          "TSX_TSCONFIG_PATH": "tsconfig.base.json"
        }
      }
    },
    "nx-release-publish": {
      "dependsOn": ["build"],
      "executor": "@nx/js:release-publish",
      "options": {
        "packageRoot": "{projectRoot}/dist",
        "registry": "https://registry.npmjs.org/"
      }
    }
  },
  "workspaceLayout": {
    "appsDir": "examples",
    "libsDir": "packages"
  },
  "generators": {},
  "release": {
    "projects": ["packages/*"],
    "projectsRelationship": "fixed",
    "changelog": {
      "automaticFromRef": true,
      "projectChangelogs": false,
      "workspaceChangelog": {
        "createRelease": "github"
      }
    },
    "git": {
      "commit": true,
      "push": true,
      "pushRemote": "origin",
      "tag": true,
      "commitMessage": "release: {version} [skip ci]"
    },
    "version": {
      "conventionalCommits": true,
      "preserveLocalDependencyProtocols": false,
      "versionActionsOptions": {
        "skipLockFileUpdate": true
      }
    },
    "releaseTagPattern": "v{version}"
  },
  "plugins": [
    {
      "plugin": "@push-based/nx-verdaccio",
      "options": {
        "environments": {
          "environmentsDir": "tmp/e2e",
          "targetNames": ["e2e"],
          "inferredTargets": {
            "e2e": "e2e-test"
          }
        },
        "packages": {
          "filterByTags": ["publishable"]
        }
      }
    }
  ],
  "nxCloudId": "65d4d862d2adb16a45a4bc7c"
}
