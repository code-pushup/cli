{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nx"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "@nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "scope:shared",
                "onlyDependOnLibsWithTags": ["scope:shared"]
              },
              {
                "sourceTag": "scope:core",
                "onlyDependOnLibsWithTags": ["scope:core", "scope:shared"]
              },
              {
                "sourceTag": "scope:plugin",
                "onlyDependOnLibsWithTags": ["scope:shared"]
              },
              {
                "sourceTag": "scope:tooling",
                "onlyDependOnLibsWithTags": ["scope:shared"]
              },
              {
                "sourceTag": "type:e2e",
                "onlyDependOnLibsWithTags": [
                  "type:app",
                  "type:feature",
                  "type:testing-util"
                ]
              },
              {
                "sourceTag": "type:app",
                "onlyDependOnLibsWithTags": [
                  "type:feature",
                  "type:util",
                  "type:testing-util"
                ]
              },
              {
                "sourceTag": "type:feature",
                "onlyDependOnLibsWithTags": ["type:util", "type:testing-util"]
              },
              {
                "sourceTag": "type:util",
                "onlyDependOnLibsWithTags": ["type:util", "type:testing-util"]
              },
              {
                "sourceTag": "type:testing-util",
                "onlyDependOnLibsWithTags": ["type:util"]
              }
            ]
          }
        ]
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "extends": [
        "plugin:@nx/typescript",
        "@code-pushup/eslint-config/typescript",
        "@code-pushup/eslint-config/node",
        "@code-pushup/eslint-config/vitest"
      ],
      "settings": {
        "import/resolver": {
          "typescript": {
            "project": "tsconfig.base.json"
          }
        }
      },
      "rules": {
        "vitest/consistent-test-filename": [
          "warn",
          { "pattern": ".*\\.(unit|integration|e2e)\\.test\\.[tj]sx?$" }
        ]
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nx/javascript", "@code-pushup"],
      "rules": {}
    },
    {
      "files": "*.json",
      "parser": "jsonc-eslint-parser",
      "rules": {}
    },
    {
      "files": "*.ts",
      "rules": {
        // turn off failing rules until they're fixed in codebase
        // TODO: remove a rule when it no longer fails
        "no-param-reassign": "off",
        "max-lines-per-function": "off",
        "no-console": "off",
        "no-magic-numbers": "off",
        "prefer-template": "off",
        "arrow-body-style": "off",
        "curly": "off",
        "no-duplicate-imports": "off",
        "n/no-sync": "off",
        "functional/immutable-data": "off",
        "functional/no-let": "off",
        "import/no-useless-path-segments": "off",
        "import/no-cycle": "off",
        "import/no-named-as-default": "off",
        "@typescript-eslint/consistent-type-assertions": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-argument": "off",
        "@typescript-eslint/require-await": "off",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/prefer-nullish-coalescing": "off",
        "@typescript-eslint/naming-convention": "off",
        "@typescript-eslint/no-unnecessary-condition": "off",
        "@typescript-eslint/no-unnecessary-type-arguments": "off",
        "@typescript-eslint/no-unnecessary-type-assertion": "off",
        "@typescript-eslint/consistent-type-definitions": "off",
        "@typescript-eslint/no-shadow": "off",
        "@typescript-eslint/non-nullable-type-assertion-style": "off",
        "@typescript-eslint/no-unused-expressions": "off",
        "@typescript-eslint/restrict-plus-operands": "off",
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/no-confusing-void-expression": "off",
        "@typescript-eslint/dot-notation": "off",
        "sonarjs/no-duplicate-string": "off",
        "sonarjs/no-nested-template-literals": "off",
        "sonarjs/cognitive-complexity": "off",
        "sonarjs/no-unused-collection": "off",
        "unicorn/error-message": "off",
        "unicorn/prefer-module": "off",
        "unicorn/switch-case-braces": "off",
        "unicorn/catch-error-name": "off",
        "unicorn/no-negated-condition": "off",
        "unicorn/import-style": "off",
        "unicorn/prefer-node-protocol": "off",
        "unicorn/consistent-destructuring": "off",
        "unicorn/no-await-expression-member": "off",
        "unicorn/no-new-array": "off",
        "unicorn/numeric-separators-style": "off",
        "unicorn/prefer-spread": "off",
        "unicorn/prefer-ternary": "off",
        "unicorn/better-regex": "off",
        "unicorn/prefer-string-replace-all": "off",
        "unicorn/prefer-number-properties": "off",
        "unicorn/prefer-logical-operator-over-ternary": "off",
        "unicorn/explicit-length-check": "off",
        "unicorn/no-empty-file": "off",
        "unicorn/prefer-at": "off",
        "unicorn/prefer-top-level-await": "off",
        "unicorn/consistent-function-scoping": "off",
        "unicorn/no-useless-undefined": "off"
      }
    }
  ]
}
