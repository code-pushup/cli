// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`CLI upload > should throw error if no report.json 1`] = `
"Error: report.json not found. Did you run collect first?
    at upload (file:///Users/Work/projects/flowup/quality-metrics-cli/dist/packages/cli/index.js:1307:11)
    at handler (file:///Users/Work/projects/flowup/quality-metrics-cli/dist/packages/cli/index.js:1419:13)
    at Object.handler (file:///Users/Work/projects/flowup/quality-metrics-cli/dist/packages/cli/index.js:1531:20)
    at file:///Users/Work/projects/flowup/quality-metrics-cli/node_modules/[4myargs[24m/build/lib/command.js:206:54
    at file:///Users/Work/projects/flowup/quality-metrics-cli/node_modules/[4myargs[24m/build/lib/utils/maybe-async-result.js:8:39
code-pushup upload

Upload report results to the portal

Options:
      --progress             Show progress bar in stdout.
                                                       [boolean] [default: true]
      --verbose              When true creates more verbose output. This is help
                             ful when debugging.      [boolean] [default: false]
      --config               Path the the config file, e.g. code-pushup.config.j
                             s       [string] [default: \\"code-pushup.config.js\\"]
      --persist.outputDir    Directory for the produced reports         [string]
      --persist.format       Format of the report output. e.g. \`md\`, \`json\`, \`st
                             dout\`                                       [array]
      --upload.organization  Organization slug from portal              [string]
      --upload.project       Project slug from portal                   [string]
      --upload.server        URL to your portal server                  [string]
      --upload.apiKey        API key for the portal server              [string]
  -h, --help                 Show help                                 [boolean]

Error: report.json not found. Did you run collect first?
    at upload (file:///Users/Work/projects/flowup/quality-metrics-cli/dist/packages/cli/index.js:1307:11)
    at handler (file:///Users/Work/projects/flowup/quality-metrics-cli/dist/packages/cli/index.js:1419:13)
    at Object.handler (file:///Users/Work/projects/flowup/quality-metrics-cli/dist/packages/cli/index.js:1531:20)
    at file:///Users/Work/projects/flowup/quality-metrics-cli/node_modules/[4myargs[24m/build/lib/command.js:206:54
    at file:///Users/Work/projects/flowup/quality-metrics-cli/node_modules/[4myargs[24m/build/lib/utils/maybe-async-result.js:8:39
"
`;

exports[`CLI upload > should upload report.json 1`] = `
{
  "operationName": "saveReport",
  "query": "mutation saveReport($organization: Slug!, $project: Slug!, $commit: CommitSHA!, $plugins: [PluginReport!]!, $categories: [CategoryConfig!]!, $packageName: NpmPackageName, $packageVersion: NpmPackageVersion, $commandStartDate: Date, $commandDuration: Int) {
  saveReport(
    organization: $organization
    project: $project
    commit: $commit
    plugins: $plugins
    categories: $categories
    packageName: $packageName
    packageVersion: $packageVersion
    commandStartDate: $commandStartDate
    commandDuration: $commandDuration
  ) {
    ...Report
  }
}

fragment Report on Report {
  packageName
  packageVersion
  commandStartDate
  commandDuration
  project {
    ...Project
  }
  repository {
    ...Repository
  }
  commit {
    ...Commit
  }
  plugins {
    ...Plugin
  }
  categories {
    ...Category
  }
  audits {
    edges {
      node {
        ...Audit
      }
    }
  }
  issues(first: 1000) {
    edges {
      node {
        ...Issue
      }
    }
    pageInfo {
      hasNextPage
    }
  }
}

fragment Project on Project {
  slug
  friendlyName
  organization {
    ...Organization
  }
}

fragment Organization on Organization {
  slug
  friendlyName
}

fragment Repository on Repository {
  __typename
  url
  ... on GitHubRepository {
    owner
    repo
  }
  ... on GitLabRepository {
    owner
    repo
  }
}

fragment Commit on Commit {
  sha
  message
  date
  author {
    name
    email
    avatarUrl
  }
  url
}

fragment Plugin on Plugin {
  slug
  title
  description
  docsUrl
  packageName
  packageVersion
  runnerStartDate
  runnerDuration
  auditsCount
  groupsCount
}

fragment Category on Category {
  slug
  title
  description
  score
  groups {
    ...Group
  }
  audits {
    edges {
      node {
        ...Audit
      }
    }
  }
}

fragment Group on Group {
  slug
  title
  description
  score
  audits {
    edges {
      node {
        ...Audit
      }
    }
  }
}

fragment Audit on Audit {
  slug
  title
  description
  docsUrl
  plugin {
    slug
    title
  }
  value
  formattedValue
  score
  details {
    issueCounts {
      severity
      count
    }
  }
}

fragment Issue on Issue {
  message
  severity
  audit {
    slug
    title
    plugin {
      slug
      title
    }
  }
  source {
    __typename
    ... on SourceCodeLocation {
      filePath
      startLine
      startColumn
      endLine
      endColumn
      webUrl
    }
  }
}",
  "variables": {
    "categories": [
      {
        "refs": [
          {
            "plugin": "eslint",
            "slug": "no-cond-assign",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "no-const-assign",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "no-debugger",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "no-invalid-regexp",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "no-undef",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "no-unreachable-loop",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "no-unsafe-negation",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "no-unsafe-optional-chaining",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "use-isnan",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "valid-typeof",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "eqeqeq",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "react-jsx-key",
            "type": "Audit",
            "weight": 2,
          },
          {
            "plugin": "eslint",
            "slug": "react-prop-types",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "react-react-in-jsx-scope",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "react-hooks-rules-of-hooks",
            "type": "Audit",
            "weight": 2,
          },
          {
            "plugin": "eslint",
            "slug": "react-hooks-exhaustive-deps",
            "type": "Audit",
            "weight": 2,
          },
        ],
        "slug": "bug-prevention",
        "title": "Bug prevention",
      },
      {
        "refs": [
          {
            "plugin": "eslint",
            "slug": "no-unused-vars",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "arrow-body-style",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "camelcase",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "curly",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "eqeqeq",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "max-lines-per-function",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "max-lines",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "object-shorthand",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "prefer-arrow-callback",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "prefer-const",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "prefer-object-spread",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "yoda",
            "type": "Audit",
            "weight": 1,
          },
          {
            "plugin": "eslint",
            "slug": "no-var",
            "type": "Audit",
            "weight": 1,
          },
        ],
        "slug": "code-style",
        "title": "Code style",
      },
    ],
    "commandDuration": 578,
    "commandStartDate": "2023-11-02T20:21:43.699Z",
    "commit": "bc10ac9240d8d06a65e7978d38b6ddeb2ede34d4",
    "packageName": "@code-pushup/core",
    "packageVersion": "0.0.1",
    "plugins": [
      {
        "audits": [
          {
            "description": "ESLint rule **no-cond-assign**.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/no-cond-assign",
            "score": 1,
            "slug": "no-cond-assign",
            "title": "Disallow assignment operators in conditional expressions",
            "value": 0,
          },
          {
            "description": "ESLint rule **no-const-assign**.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/no-const-assign",
            "score": 1,
            "slug": "no-const-assign",
            "title": "Disallow reassigning \`const\` variables",
            "value": 0,
          },
          {
            "description": "ESLint rule **no-debugger**.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/no-debugger",
            "score": 1,
            "slug": "no-debugger",
            "title": "Disallow the use of \`debugger\`",
            "value": 0,
          },
          {
            "description": "ESLint rule **no-invalid-regexp**.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/no-invalid-regexp",
            "score": 1,
            "slug": "no-invalid-regexp",
            "title": "Disallow invalid regular expression strings in \`RegExp\` constructors",
            "value": 0,
          },
          {
            "description": "ESLint rule **no-undef**.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/no-undef",
            "score": 1,
            "slug": "no-undef",
            "title": "Disallow the use of undeclared variables unless mentioned in \`/*global */\` comments",
            "value": 0,
          },
          {
            "description": "ESLint rule **no-unreachable-loop**.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/no-unreachable-loop",
            "score": 1,
            "slug": "no-unreachable-loop",
            "title": "Disallow loops with a body that allows only one iteration",
            "value": 0,
          },
          {
            "description": "ESLint rule **no-unsafe-negation**.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/no-unsafe-negation",
            "score": 1,
            "slug": "no-unsafe-negation",
            "title": "Disallow negating the left operand of relational operators",
            "value": 0,
          },
          {
            "description": "ESLint rule **no-unsafe-optional-chaining**.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/no-unsafe-optional-chaining",
            "score": 1,
            "slug": "no-unsafe-optional-chaining",
            "title": "Disallow use of optional chaining in contexts where the \`undefined\` value is not allowed",
            "value": 0,
          },
          {
            "description": "ESLint rule **no-unused-vars**.",
            "details": {
              "issues": [
                {
                  "message": "'loading' is assigned a value but never used.",
                  "severity": "Warning",
                  "sourceEndColumn": 18,
                  "sourceEndLine": 8,
                  "sourceFilePath": "src/App.jsx",
                  "sourceStartColumn": 11,
                  "sourceStartLine": 8,
                  "sourceType": "SourceCode",
                },
              ],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/no-unused-vars",
            "formattedValue": "1 warning",
            "score": 0,
            "slug": "no-unused-vars",
            "title": "Disallow unused variables",
            "value": 1,
          },
          {
            "description": "ESLint rule **use-isnan**.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/use-isnan",
            "score": 1,
            "slug": "use-isnan",
            "title": "Require calls to \`isNaN()\` when checking for \`NaN\`",
            "value": 0,
          },
          {
            "description": "ESLint rule **valid-typeof**.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/valid-typeof",
            "score": 1,
            "slug": "valid-typeof",
            "title": "Enforce comparing \`typeof\` expressions against valid strings",
            "value": 0,
          },
          {
            "description": "ESLint rule **arrow-body-style**.",
            "details": {
              "issues": [
                {
                  "message": "Unexpected block statement surrounding arrow body; move the returned value immediately after the \`=>\`.",
                  "severity": "Warning",
                  "sourceEndColumn": 2,
                  "sourceEndLine": 25,
                  "sourceFilePath": "src/components/TodoFilter.jsx",
                  "sourceStartColumn": 29,
                  "sourceStartLine": 3,
                  "sourceType": "SourceCode",
                },
              ],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/arrow-body-style",
            "formattedValue": "1 warning",
            "score": 0,
            "slug": "arrow-body-style",
            "title": "Require braces around arrow function bodies",
            "value": 1,
          },
          {
            "description": "ESLint rule **camelcase**.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/camelcase",
            "score": 1,
            "slug": "camelcase",
            "title": "Enforce camelcase naming convention",
            "value": 0,
          },
          {
            "description": "ESLint rule **curly**.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/curly",
            "score": 1,
            "slug": "curly",
            "title": "Enforce consistent brace style for all control statements",
            "value": 0,
          },
          {
            "description": "ESLint rule **eqeqeq**.",
            "details": {
              "issues": [
                {
                  "message": "Expected '===' and instead saw '=='.",
                  "severity": "Warning",
                  "sourceEndColumn": 43,
                  "sourceEndLine": 41,
                  "sourceFilePath": "src/hooks/useTodos.js",
                  "sourceStartColumn": 41,
                  "sourceStartLine": 41,
                  "sourceType": "SourceCode",
                },
              ],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/eqeqeq",
            "formattedValue": "1 warning",
            "score": 0,
            "slug": "eqeqeq",
            "title": "Require the use of \`===\` and \`!==\`",
            "value": 1,
          },
          {
            "description": "ESLint rule **max-lines-per-function**.",
            "details": {
              "issues": [
                {
                  "message": "Arrow function has too many lines (71). Maximum allowed is 50.",
                  "severity": "Warning",
                  "sourceEndColumn": 2,
                  "sourceEndLine": 73,
                  "sourceFilePath": "src/hooks/useTodos.js",
                  "sourceStartColumn": 25,
                  "sourceStartLine": 3,
                  "sourceType": "SourceCode",
                },
              ],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/max-lines-per-function",
            "formattedValue": "1 warning",
            "score": 0,
            "slug": "max-lines-per-function",
            "title": "Enforce a maximum number of lines of code in a function",
            "value": 1,
          },
          {
            "description": "ESLint rule **max-lines**.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/max-lines",
            "score": 1,
            "slug": "max-lines",
            "title": "Enforce a maximum number of lines per file",
            "value": 0,
          },
          {
            "description": "ESLint rule **no-shadow**.",
            "details": {
              "issues": [
                {
                  "message": "'data' is already declared in the upper scope on line 5 column 10.",
                  "severity": "Warning",
                  "sourceEndColumn": 17,
                  "sourceEndLine": 11,
                  "sourceFilePath": "src/hooks/useTodos.js",
                  "sourceStartColumn": 13,
                  "sourceStartLine": 11,
                  "sourceType": "SourceCode",
                },
                {
                  "message": "'data' is already declared in the upper scope on line 5 column 10.",
                  "severity": "Warning",
                  "sourceEndColumn": 21,
                  "sourceEndLine": 29,
                  "sourceFilePath": "src/hooks/useTodos.js",
                  "sourceStartColumn": 17,
                  "sourceStartLine": 29,
                  "sourceType": "SourceCode",
                },
                {
                  "message": "'data' is already declared in the upper scope on line 5 column 10.",
                  "severity": "Warning",
                  "sourceEndColumn": 17,
                  "sourceEndLine": 41,
                  "sourceFilePath": "src/hooks/useTodos.js",
                  "sourceStartColumn": 13,
                  "sourceStartLine": 41,
                  "sourceType": "SourceCode",
                },
              ],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/no-shadow",
            "formattedValue": "3 warnings",
            "score": 0,
            "slug": "no-shadow",
            "title": "Disallow variable declarations from shadowing variables declared in the outer scope",
            "value": 3,
          },
          {
            "description": "ESLint rule **no-var**.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/no-var",
            "score": 1,
            "slug": "no-var",
            "title": "Require \`let\` or \`const\` instead of \`var\`",
            "value": 0,
          },
          {
            "description": "ESLint rule **object-shorthand**.",
            "details": {
              "issues": [
                {
                  "message": "Expected property shorthand.",
                  "severity": "Warning",
                  "sourceEndColumn": 19,
                  "sourceEndLine": 19,
                  "sourceFilePath": "src/hooks/useTodos.js",
                  "sourceStartColumn": 7,
                  "sourceStartLine": 19,
                  "sourceType": "SourceCode",
                },
                {
                  "message": "Expected property shorthand.",
                  "severity": "Warning",
                  "sourceEndColumn": 19,
                  "sourceEndLine": 32,
                  "sourceFilePath": "src/hooks/useTodos.js",
                  "sourceStartColumn": 13,
                  "sourceStartLine": 32,
                  "sourceType": "SourceCode",
                },
                {
                  "message": "Expected property shorthand.",
                  "severity": "Warning",
                  "sourceEndColumn": 25,
                  "sourceEndLine": 33,
                  "sourceFilePath": "src/hooks/useTodos.js",
                  "sourceStartColumn": 13,
                  "sourceStartLine": 33,
                  "sourceType": "SourceCode",
                },
              ],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/object-shorthand",
            "formattedValue": "3 warnings",
            "score": 0,
            "slug": "object-shorthand",
            "title": "Require or disallow method and property shorthand syntax for object literals",
            "value": 3,
          },
          {
            "description": "ESLint rule **prefer-arrow-callback**.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/prefer-arrow-callback",
            "score": 1,
            "slug": "prefer-arrow-callback",
            "title": "Require using arrow functions for callbacks",
            "value": 0,
          },
          {
            "description": "ESLint rule **prefer-const**.",
            "details": {
              "issues": [
                {
                  "message": "'root' is never reassigned. Use 'const' instead.",
                  "severity": "Warning",
                  "sourceEndColumn": 9,
                  "sourceEndLine": 5,
                  "sourceFilePath": "src/index.jsx",
                  "sourceStartColumn": 5,
                  "sourceStartLine": 5,
                  "sourceType": "SourceCode",
                },
              ],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/prefer-const",
            "formattedValue": "1 warning",
            "score": 0,
            "slug": "prefer-const",
            "title": "Require \`const\` declarations for variables that are never reassigned after declared",
            "value": 1,
          },
          {
            "description": "ESLint rule **prefer-object-spread**.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/prefer-object-spread",
            "score": 1,
            "slug": "prefer-object-spread",
            "title": "Disallow using Object.assign with an object literal as the first argument and prefer the use of object spread instead",
            "value": 0,
          },
          {
            "description": "ESLint rule **yoda**.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://eslint.org/docs/latest/rules/yoda",
            "score": 1,
            "slug": "yoda",
            "title": "Require or disallow \\"Yoda\\" conditions",
            "value": 0,
          },
          {
            "description": "ESLint rule **jsx-key**, from _react_ plugin.",
            "details": {
              "issues": [
                {
                  "message": "Missing \\"key\\" prop for element in iterator",
                  "severity": "Warning",
                  "sourceEndColumn": 12,
                  "sourceEndLine": 28,
                  "sourceFilePath": "src/components/TodoList.jsx",
                  "sourceStartColumn": 7,
                  "sourceStartLine": 7,
                  "sourceType": "SourceCode",
                },
              ],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-key.md",
            "formattedValue": "1 warning",
            "score": 0,
            "slug": "react-jsx-key",
            "title": "Disallow missing \`key\` props in iterators/collection literals",
            "value": 1,
          },
          {
            "description": "ESLint rule **prop-types**, from _react_ plugin.",
            "details": {
              "issues": [
                {
                  "message": "'onCreate' is missing in props validation",
                  "severity": "Warning",
                  "sourceEndColumn": 23,
                  "sourceEndLine": 15,
                  "sourceFilePath": "src/components/CreateTodo.jsx",
                  "sourceStartColumn": 15,
                  "sourceStartLine": 15,
                  "sourceType": "SourceCode",
                },
                {
                  "message": "'setQuery' is missing in props validation",
                  "severity": "Warning",
                  "sourceEndColumn": 25,
                  "sourceEndLine": 10,
                  "sourceFilePath": "src/components/TodoFilter.jsx",
                  "sourceStartColumn": 17,
                  "sourceStartLine": 10,
                  "sourceType": "SourceCode",
                },
                {
                  "message": "'setHideComplete' is missing in props validation",
                  "severity": "Warning",
                  "sourceEndColumn": 34,
                  "sourceEndLine": 18,
                  "sourceFilePath": "src/components/TodoFilter.jsx",
                  "sourceStartColumn": 19,
                  "sourceStartLine": 18,
                  "sourceType": "SourceCode",
                },
                {
                  "message": "'todos' is missing in props validation",
                  "severity": "Warning",
                  "sourceEndColumn": 17,
                  "sourceEndLine": 6,
                  "sourceFilePath": "src/components/TodoList.jsx",
                  "sourceStartColumn": 12,
                  "sourceStartLine": 6,
                  "sourceType": "SourceCode",
                },
                {
                  "message": "'todos.map' is missing in props validation",
                  "severity": "Warning",
                  "sourceEndColumn": 21,
                  "sourceEndLine": 6,
                  "sourceFilePath": "src/components/TodoList.jsx",
                  "sourceStartColumn": 18,
                  "sourceStartLine": 6,
                  "sourceType": "SourceCode",
                },
                {
                  "message": "'onEdit' is missing in props validation",
                  "severity": "Warning",
                  "sourceEndColumn": 27,
                  "sourceEndLine": 13,
                  "sourceFilePath": "src/components/TodoList.jsx",
                  "sourceStartColumn": 21,
                  "sourceStartLine": 13,
                  "sourceType": "SourceCode",
                },
              ],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/prop-types.md",
            "formattedValue": "6 warnings",
            "score": 0,
            "slug": "react-prop-types",
            "title": "Disallow missing props validation in a React component definition",
            "value": 6,
          },
          {
            "description": "ESLint rule **react-in-jsx-scope**, from _react_ plugin.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/react-in-jsx-scope.md",
            "score": 1,
            "slug": "react-react-in-jsx-scope",
            "title": "Disallow missing React when using JSX",
            "value": 0,
          },
          {
            "description": "ESLint rule **rules-of-hooks**, from _react-hooks_ plugin.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://reactjs.org/docs/hooks-rules.html",
            "score": 1,
            "slug": "react-hooks-rules-of-hooks",
            "title": "enforces the Rules of Hooks",
            "value": 0,
          },
          {
            "description": "ESLint rule **exhaustive-deps**, from _react-hooks_ plugin.",
            "details": {
              "issues": [
                {
                  "message": "React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?",
                  "severity": "Warning",
                  "sourceEndColumn": 31,
                  "sourceEndLine": 17,
                  "sourceFilePath": "src/hooks/useTodos.js",
                  "sourceStartColumn": 20,
                  "sourceStartLine": 17,
                  "sourceType": "SourceCode",
                },
                {
                  "message": "React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?",
                  "severity": "Warning",
                  "sourceEndColumn": 29,
                  "sourceEndLine": 40,
                  "sourceFilePath": "src/hooks/useTodos.js",
                  "sourceStartColumn": 18,
                  "sourceStartLine": 40,
                  "sourceType": "SourceCode",
                },
              ],
            },
            "docsUrl": "https://github.com/facebook/react/issues/14920",
            "formattedValue": "2 warnings",
            "score": 0,
            "slug": "react-hooks-exhaustive-deps",
            "title": "verifies the list of dependencies for Hooks like useEffect and similar",
            "value": 2,
          },
          {
            "description": "ESLint rule **display-name**, from _react_ plugin.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/display-name.md",
            "score": 1,
            "slug": "react-display-name",
            "title": "Disallow missing displayName in a React component definition",
            "value": 0,
          },
          {
            "description": "ESLint rule **jsx-no-comment-textnodes**, from _react_ plugin.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-comment-textnodes.md",
            "score": 1,
            "slug": "react-jsx-no-comment-textnodes",
            "title": "Disallow comments from being inserted as text nodes",
            "value": 0,
          },
          {
            "description": "ESLint rule **jsx-no-duplicate-props**, from _react_ plugin.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-duplicate-props.md",
            "score": 1,
            "slug": "react-jsx-no-duplicate-props",
            "title": "Disallow duplicate properties in JSX",
            "value": 0,
          },
          {
            "description": "ESLint rule **jsx-no-target-blank**, from _react_ plugin.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-target-blank.md",
            "score": 1,
            "slug": "react-jsx-no-target-blank",
            "title": "Disallow \`target=\\"_blank\\"\` attribute without \`rel=\\"noreferrer\\"\`",
            "value": 0,
          },
          {
            "description": "ESLint rule **jsx-no-undef**, from _react_ plugin.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-undef.md",
            "score": 1,
            "slug": "react-jsx-no-undef",
            "title": "Disallow undeclared variables in JSX",
            "value": 0,
          },
          {
            "description": "ESLint rule **jsx-uses-react**, from _react_ plugin.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-uses-react.md",
            "score": 1,
            "slug": "react-jsx-uses-react",
            "title": "Disallow React to be incorrectly marked as unused",
            "value": 0,
          },
          {
            "description": "ESLint rule **jsx-uses-vars**, from _react_ plugin.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-uses-vars.md",
            "score": 1,
            "slug": "react-jsx-uses-vars",
            "title": "Disallow variables used in JSX to be incorrectly marked as unused",
            "value": 0,
          },
          {
            "description": "ESLint rule **no-children-prop**, from _react_ plugin.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-children-prop.md",
            "score": 1,
            "slug": "react-no-children-prop",
            "title": "Disallow passing of children as props",
            "value": 0,
          },
          {
            "description": "ESLint rule **no-danger-with-children**, from _react_ plugin.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-danger-with-children.md",
            "score": 1,
            "slug": "react-no-danger-with-children",
            "title": "Disallow when a DOM element is using both children and dangerouslySetInnerHTML",
            "value": 0,
          },
          {
            "description": "ESLint rule **no-deprecated**, from _react_ plugin.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-deprecated.md",
            "score": 1,
            "slug": "react-no-deprecated",
            "title": "Disallow usage of deprecated methods",
            "value": 0,
          },
          {
            "description": "ESLint rule **no-direct-mutation-state**, from _react_ plugin.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-direct-mutation-state.md",
            "score": 1,
            "slug": "react-no-direct-mutation-state",
            "title": "Disallow direct mutation of this.state",
            "value": 0,
          },
          {
            "description": "ESLint rule **no-find-dom-node**, from _react_ plugin.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-find-dom-node.md",
            "score": 1,
            "slug": "react-no-find-dom-node",
            "title": "Disallow usage of findDOMNode",
            "value": 0,
          },
          {
            "description": "ESLint rule **no-is-mounted**, from _react_ plugin.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-is-mounted.md",
            "score": 1,
            "slug": "react-no-is-mounted",
            "title": "Disallow usage of isMounted",
            "value": 0,
          },
          {
            "description": "ESLint rule **no-render-return-value**, from _react_ plugin.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-render-return-value.md",
            "score": 1,
            "slug": "react-no-render-return-value",
            "title": "Disallow usage of the return value of ReactDOM.render",
            "value": 0,
          },
          {
            "description": "ESLint rule **no-string-refs**, from _react_ plugin.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-string-refs.md",
            "score": 1,
            "slug": "react-no-string-refs",
            "title": "Disallow using string references",
            "value": 0,
          },
          {
            "description": "ESLint rule **no-unescaped-entities**, from _react_ plugin.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-unescaped-entities.md",
            "score": 1,
            "slug": "react-no-unescaped-entities",
            "title": "Disallow unescaped HTML entities from appearing in markup",
            "value": 0,
          },
          {
            "description": "ESLint rule **no-unknown-property**, from _react_ plugin.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-unknown-property.md",
            "score": 1,
            "slug": "react-no-unknown-property",
            "title": "Disallow usage of unknown DOM property",
            "value": 0,
          },
          {
            "description": "ESLint rule **require-render-return**, from _react_ plugin.",
            "details": {
              "issues": [],
            },
            "docsUrl": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/require-render-return.md",
            "score": 1,
            "slug": "react-require-render-return",
            "title": "Enforce ES5 or ES6 class for returning value in render function",
            "value": 0,
          },
        ],
        "description": "Official Code PushUp ESLint plugin",
        "icon": "eslint",
        "packageName": "@code-pushup/eslint-plugin",
        "packageVersion": "0.0.1",
        "runnerDuration": 576,
        "runnerStartDate": "2023-11-02T20:21:43.699Z",
        "slug": "eslint",
        "title": "ESLint",
      },
    ],
  },
}
`;
