// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`CLI compare > should compare report.json files and create report-diff.json and report-diff.md 1`] = `
{
  "audits": {
    "added": [],
    "changed": [
      {
        "displayValues": {
          "after": "passed",
          "before": "1 warning",
        },
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "scores": {
          "after": 1,
          "before": 0,
          "diff": 1,
        },
        "slug": "arrow-body-style",
        "title": "Require braces around arrow function bodies",
        "values": {
          "after": 0,
          "before": 1,
          "diff": -1,
        },
      },
      {
        "displayValues": {
          "after": "passed",
          "before": "3 warnings",
        },
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "scores": {
          "after": 1,
          "before": 0,
          "diff": 1,
        },
        "slug": "object-shorthand",
        "title": "Require or disallow method and property shorthand syntax for object literals",
        "values": {
          "after": 0,
          "before": 3,
          "diff": -3,
        },
      },
      {
        "displayValues": {
          "after": "passed",
          "before": "1 warning",
        },
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "scores": {
          "after": 1,
          "before": 0,
          "diff": 1,
        },
        "slug": "prefer-const",
        "title": "Require \`const\` declarations for variables that are never reassigned after declared",
        "values": {
          "after": 0,
          "before": 1,
          "diff": -1,
        },
      },
    ],
    "removed": [],
    "unchanged": [
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "no-cond-assign",
        "title": "Disallow assignment operators in conditional expressions",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "no-const-assign",
        "title": "Disallow reassigning \`const\` variables",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "no-debugger",
        "title": "Disallow the use of \`debugger\`",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "no-invalid-regexp",
        "title": "Disallow invalid regular expression strings in \`RegExp\` constructors",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "no-undef",
        "title": "Disallow the use of undeclared variables unless mentioned in \`/*global */\` comments",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "no-unreachable-loop",
        "title": "Disallow loops with a body that allows only one iteration",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "no-unsafe-negation",
        "title": "Disallow negating the left operand of relational operators",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "no-unsafe-optional-chaining",
        "title": "Disallow use of optional chaining in contexts where the \`undefined\` value is not allowed",
        "value": 0,
      },
      {
        "displayValue": "1 warning",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 0,
        "slug": "no-unused-vars",
        "title": "Disallow unused variables",
        "value": 1,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "use-isnan",
        "title": "Require calls to \`isNaN()\` when checking for \`NaN\`",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "valid-typeof",
        "title": "Enforce comparing \`typeof\` expressions against valid strings",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "camelcase",
        "title": "Enforce camelcase naming convention",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "curly",
        "title": "Enforce consistent brace style for all control statements",
        "value": 0,
      },
      {
        "displayValue": "1 warning",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 0,
        "slug": "eqeqeq",
        "title": "Require the use of \`===\` and \`!==\`",
        "value": 1,
      },
      {
        "displayValue": "1 warning",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 0,
        "slug": "max-lines-per-function",
        "title": "Enforce a maximum number of lines of code in a function",
        "value": 1,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "max-lines",
        "title": "Enforce a maximum number of lines per file",
        "value": 0,
      },
      {
        "displayValue": "3 warnings",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 0,
        "slug": "no-shadow",
        "title": "Disallow variable declarations from shadowing variables declared in the outer scope",
        "value": 3,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "no-var",
        "title": "Require \`let\` or \`const\` instead of \`var\`",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "prefer-arrow-callback",
        "title": "Require using arrow functions for callbacks",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "prefer-object-spread",
        "title": "Disallow using Object.assign with an object literal as the first argument and prefer the use of object spread instead",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "yoda",
        "title": "Require or disallow "Yoda" conditions",
        "value": 0,
      },
      {
        "displayValue": "1 warning",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 0,
        "slug": "react-jsx-key",
        "title": "Disallow missing \`key\` props in iterators/collection literals",
        "value": 1,
      },
      {
        "displayValue": "6 warnings",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 0,
        "slug": "react-prop-types",
        "title": "Disallow missing props validation in a React component definition",
        "value": 6,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "react-react-in-jsx-scope",
        "title": "Disallow missing React when using JSX",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "react-hooks-rules-of-hooks",
        "title": "enforces the Rules of Hooks",
        "value": 0,
      },
      {
        "displayValue": "2 warnings",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 0,
        "slug": "react-hooks-exhaustive-deps",
        "title": "verifies the list of dependencies for Hooks like useEffect and similar",
        "value": 2,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "react-display-name",
        "title": "Disallow missing displayName in a React component definition",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "react-jsx-no-comment-textnodes",
        "title": "Disallow comments from being inserted as text nodes",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "react-jsx-no-duplicate-props",
        "title": "Disallow duplicate properties in JSX",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "react-jsx-no-target-blank",
        "title": "Disallow \`target="_blank"\` attribute without \`rel="noreferrer"\`",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "react-jsx-no-undef",
        "title": "Disallow undeclared variables in JSX",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "react-jsx-uses-react",
        "title": "Disallow React to be incorrectly marked as unused",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "react-jsx-uses-vars",
        "title": "Disallow variables used in JSX to be incorrectly marked as unused",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "react-no-children-prop",
        "title": "Disallow passing of children as props",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "react-no-danger-with-children",
        "title": "Disallow when a DOM element is using both children and dangerouslySetInnerHTML",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "react-no-deprecated",
        "title": "Disallow usage of deprecated methods",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "react-no-direct-mutation-state",
        "title": "Disallow direct mutation of this.state",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "react-no-find-dom-node",
        "title": "Disallow usage of findDOMNode",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "react-no-is-mounted",
        "title": "Disallow usage of isMounted",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "react-no-render-return-value",
        "title": "Disallow usage of the return value of ReactDOM.render",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "react-no-string-refs",
        "title": "Disallow using string references",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "react-no-unescaped-entities",
        "title": "Disallow unescaped HTML entities from appearing in markup",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "react-no-unknown-property",
        "title": "Disallow usage of unknown DOM property",
        "value": 0,
      },
      {
        "displayValue": "passed",
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 1,
        "slug": "react-require-render-return",
        "title": "Enforce ES5 or ES6 class for returning value in render function",
        "value": 0,
      },
    ],
  },
  "categories": {
    "added": [],
    "changed": [
      {
        "scores": {
          "after": 0.7692307692307693,
          "before": 0.5384615384615384,
          "diff": 0.23076923076923084,
        },
        "slug": "code-style",
        "title": "Code style",
      },
    ],
    "removed": [],
    "unchanged": [
      {
        "score": 0.6842105263157895,
        "slug": "bug-prevention",
        "title": "Bug prevention",
      },
    ],
  },
  "commits": Any<Object>,
  "date": Any<String>,
  "duration": Any<Number>,
  "groups": {
    "added": [],
    "changed": [
      {
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "scores": {
          "after": 0.7142857142857143,
          "before": 0.5,
          "diff": 0.2142857142857143,
        },
        "slug": "suggestions",
        "title": "Suggestions",
      },
    ],
    "removed": [],
    "unchanged": [
      {
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 0.9166666666666666,
        "slug": "problems",
        "title": "Problems",
      },
      {
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 0.9090909090909091,
        "slug": "react-best-practices",
        "title": "Best Practices (react)",
      },
      {
        "plugin": {
          "slug": "eslint",
          "title": "ESLint",
        },
        "score": 0.9,
        "slug": "react-possible-errors",
        "title": "Possible Errors (react)",
      },
    ],
  },
  "packageName": "@code-pushup/core",
  "version": Any<String>,
}
`;
